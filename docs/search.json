[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Mike Johnson Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/01-intro-deep-dive.html","id":"what-is-a-hydrofabric","dir":"Articles","previous_headings":"","what":"What is a hydrofabric?","title":"Introduction","text":"first question generally raised , “hydrofabric?” date, term used describe artifacts narrow set cartographic lines, way entire spatial data architecture needed map model flow water flood extents. purposed , hydrofabric foundational base data allows NextGen run. provides landscape flow network discritizations connectivity (topology) network features locations information reported (nexus’s) hydrofabric also establishes system linked data Web infrastructure can relate , extract , linked sources like: USGS Next Generation Monitoring Location Pages (e.g. ) Internet Water Geoconnex PID registry (e.g. ) climate-catalogs (e.g. ) landscape characteristic catalogs","code":""},{"path":"/articles/01-intro-deep-dive.html","id":"who-cares-about-a-hydrofabric","dir":"Articles","previous_headings":"What is a hydrofabric?","what":"Who cares about a hydrofabric?","title":"Introduction","text":"Discritizing land surface computational elements fundamental modeling tasks. Without , distributed lumped models way apply needed model formulations computer science applications achieve meaningful results. Therefore anyone cares science application water resource modeling care underlying data drives locations forecasts made, attributes inform model, spatial elements formulation valid. However, describing earths surface - particularly continental scales - tricky task. Automated techniques can get us long way representation, however modeling task hand local knowledge used developing authoritative product. time, local knowledge collected number places, never centralized. , one products (like NHDPlus) used guide modeling task even cases resolution, representation well suited. aim NOAAs work space develop federal reference fabric support flavors modeling, national instance reference fabric support heterogeneous model application. Equally important software tools support flexibility community uptake; data models support interoperability, community engagement, long term stability; reference data set quality assurances one uses product getting well vetted resource able play nicely growing Ngen framework.","code":""},{"path":"/articles/01-intro-deep-dive.html","id":"current-version","dir":"Articles","previous_headings":"","what":"Current Version:","title":"Introduction","text":"date NextGen hydrofabric resources can accessed public facing Lynker AWS account. practice strive develop products take advantage following:","code":""},{"path":[]},{"path":"/articles/01-intro-deep-dive.html","id":"formats","dir":"Articles","previous_headings":"Current Version: > Leading data science","what":"Formats:","title":"Introduction","text":"GPKG Arrow/Parquet Tables","code":""},{"path":"/articles/01-intro-deep-dive.html","id":"access-patterns","dir":"Articles","previous_headings":"Current Version: > Leading data science","what":"Access Patterns:","title":"Introduction","text":"GDAL VSI SQLITE Arrow","code":""},{"path":"/articles/01-intro-deep-dive.html","id":"distribution-system","dir":"Articles","previous_headings":"Current Version: > Leading data science","what":"Distribution System","title":"Introduction","text":"s3 (AWS) ScienceBase","code":""},{"path":"/articles/01-intro-deep-dive.html","id":"hydroscience-conceptual-models-web-infastrucutre","dir":"Articles","previous_headings":"Current Version:","what":"Hydroscience Conceptual Models & Web Infastrucutre","title":"Introduction","text":"hydrofabric features grounded OGC HY Feature conceptual model.  Mainstems logical model OGC Engineering Report “Hydrologic Modeling River Corridor Applications HY_Features Concepts” Network Linked Data Index (NLDI) , Geoconnex Registry","code":""},{"path":"/articles/01-intro-deep-dive.html","id":"formal-realization-representations","dir":"Articles","previous_headings":"Current Version:","what":"Formal Realization Representations","title":"Introduction","text":"conceptual model laid HY Features conflated Simple Feature Access Spatial Data model provide logical model feature realizations represented hydrofabric data model.","code":""},{"path":"/articles/01-intro-deep-dive.html","id":"whats-to-follow","dir":"Articles","previous_headings":"","what":"What’s to follow:","title":"Introduction","text":"basic software package working products design system two primary processes processes network manipulation - refactoring aggregating fundamental data model used hydrofabrics extract subsets data needs (time permitting) access build landscape characteristics potential users, contributors, place want jump use case specific. following steps walk concepts tools building understanding NextGen ready dataset, outputs look like, might interact .","code":""},{"path":"/articles/01-intro-deep-dive.html","id":"software","dir":"Articles","previous_headings":"","what":"Software","title":"Introduction","text":"Extracting subsets primary hydrofabric data product require code, however, eager build, modify expand existing products Hydrofabric contains functions subsetting national product. Instead provides easy install variety hydroscience, data science, spatial libraries needed. Attaching library, similar tidyverse, installs loads canon software designed manipulate, modify, describe, process, quantify hydrologic networks land surface attributes: includes following: dplyr | Provides consistent set tools data manipulation | sf | Provides simple features access R | terra | Methods spatial data analysis vector (points, lines, polygons) raster (grid) data | arrow | Exposes interface Arrow C++ library | glue | Provides interpreted string literals small, fast, dependency-free |","code":"remotes::install_github(\"NOAA-OWP/hydrofabric\") library(hydrofabric) ## ── Attaching packages ────────────────────────────────────── hydrofabric0.0.7 ── ## ✔ dplyr         1.1.3        ✔ hydrofab      0.5.0    ## ✔ terra         1.7.55       ✔ zonal         0.0.2    ## ✔ ngen.hydrofab 0.0.3        ✔ glue          1.6.2    ## ✔ climateR      0.3.1.4      ✔ arrow         13.0.0.1 ## ✔ nhdplusTools  1.0.1 ## ── Conflicts ──────────────────────────────────────── hydrofabric_conflicts() ── ## ✖ arrow::buffer()    masks terra::buffer() ## ✖ terra::intersect() masks dplyr::intersect() ## ✖ glue::trim()       masks terra::trim() ## ✖ terra::union()     masks dplyr::union() ##  ## Attaching package: 'hydrofabric' ## The following object is masked _by_ 'package:hydrofab': ##  ##     hf_dm"},{"path":"/articles/01-intro-deep-dive.html","id":"todays-context","dir":"Articles","previous_headings":"","what":"Today’s Context","title":"Introduction","text":"Everyone consider USGS Gage ID mind. example, use NWIS gage=06752260 sits Cache La Poudre River Fort Collins, Colorado. associated gpkg can found USGS Next Generation Monitoring Location Page site : https://waterdata.usgs.gov/monitoring-location/06752260/ Geoconnex PID can found : https://reference.geoconnex.us/collections/gages/items?provider_id=06752260  cases need download data, also setting directory main working directory.","code":"dir.create(\"cihro-data\", showWarnings = FALSE)"},{"path":"/articles/01_intro-deep-dive.html","id":"what-is-a-hydrofabric","dir":"Articles","previous_headings":"","what":"What is a hydrofabric?","title":"NOAA's Enterprise Hydrofabric System","text":"first question generally raised , “”hydrofabric”?” date, term used describe artifacts narrow set cartographic lines, way entire spatial data architecture needed map model flow water flood extents. hydrofabric foundation base data allows NextGen run provides landscape flow network discritizations provides connectivity (topology) network features defines locations information reported (nexus’s) hydrofabric also establishes system linked data Web infrastructure Systems like USGS Next Generation Monitoring Location Pages (e.g. ) Internet Water Geoconnex PID registry (e.g. ) climate-catalogs (e.g. )  date hydrofabric data can accessed ","code":""},{"path":"/articles/01_intro-deep-dive.html","id":"who-cares-about-a-hydrofabric","dir":"Articles","previous_headings":"What is a hydrofabric?","what":"Who cares about a hydrofabric?","title":"NOAA's Enterprise Hydrofabric System","text":"Discritizing land surface computational elements fundamental modeling tasks. Without , distributed lumped models way apply needed model formulations computer science applications achieve meaningful results. Therefore anyone cares science application water resource modeling care underlying data drives locations forecasts made, attributes inform model, spatial elements formulation valid. However, describing earths surface - particularly continental scales - tricky task. Automated techniques can get us long way representation, however modeling task hand local knowledge used developing authoritative product. time, local knowledge collected number places, never centralized. , one products (like NHDPlus) used guide modeling task even cases resolution, representation well suited. aim NOAAs work space develop federal reference fabric support flavors modeling, national instance reference fabric support heterogeneous model application. Equally important software tools support flexibility community uptake; data models support interoperability, community engagement, long term stability; reference data set quality assurances one uses product getting well vetted resource able play nicely growing Ngen framework.","code":""},{"path":[]},{"path":[]},{"path":"/articles/01_intro-deep-dive.html","id":"formats","dir":"Articles","previous_headings":"Built Using… > Leading data science","what":"Formats:","title":"NOAA's Enterprise Hydrofabric System","text":"GPKG Arrow/Parquet Tables","code":""},{"path":"/articles/01_intro-deep-dive.html","id":"access-patterns","dir":"Articles","previous_headings":"Built Using… > Leading data science","what":"Access Patterns:","title":"NOAA's Enterprise Hydrofabric System","text":"GDAL VSI SQLITE Arrow","code":""},{"path":"/articles/01_intro-deep-dive.html","id":"distribution-system","dir":"Articles","previous_headings":"Built Using… > Leading data science","what":"Distribution System","title":"NOAA's Enterprise Hydrofabric System","text":"s3 (AWS) ScienceBase","code":""},{"path":"/articles/01_intro-deep-dive.html","id":"hydroscience-conceptual-models","dir":"Articles","previous_headings":"Built Using…","what":"Hydroscience Conceptual Models","title":"NOAA's Enterprise Hydrofabric System","text":"hydrofabric features grounded OGC HY Feature conceptual model.","code":""},{"path":"/articles/01_intro-deep-dive.html","id":"formal-realization-representations","dir":"Articles","previous_headings":"Built Using…","what":"Formal Realization Representations","title":"NOAA's Enterprise Hydrofabric System","text":"conceptual model laid HY Features conflated Simple Feature Access Spatial Data model provide logical model feature realizations represented hydrofabric data model.","code":""},{"path":"/articles/01_intro-deep-dive.html","id":"whats-to-follow","dir":"Articles","previous_headings":"","what":"What’s to follow:","title":"NOAA's Enterprise Hydrofabric System","text":"basic software package working products design make system two primary processes processes network manipulation - refactoring aggregating fundamental data model used hydrofabrics extract subsets data needs (time permitting) access build landscape characteristics workshop illustrate toolset working established reference fabric create Ngen ready data products. following steps walk concepts tools building Ngen ready dataset, outputs look like, might interact . Attaching library, similar tidyverse, installs loads canon software designed manipulate, modify, describe, process, quantify hydrologic networks land surface attributes: includes following:","code":"remotes::install_github(\"NOAA-OWP/hydrofabric\") library(hydrofabric) ## ── Attaching packages ────────────────────────────────────── hydrofabric0.0.6 ── ## ✔ dplyr         1.1.2      ✔ nhdplusTools  0.6.2  ## ✔ terra         1.7.21     ✔ hydrofab      0.5.0  ## ✔ ngen.hydrofab 0.0.3      ✔ zonal         0.0.2  ## ✔ climateR      0.3.0      ✔ glue          1.6.2 ## ── Conflicts ──────────────────────────────────────── hydrofabric_conflicts() ── ## ✖ terra::intersect() masks dplyr::intersect() ## ✖ glue::trim()       masks terra::trim() ## ✖ terra::union()     masks dplyr::union() ##  ## Attaching package: 'hydrofabric' ## The following object is masked _by_ 'package:hydrofab': ##  ##     subset_network"},{"path":"/articles/01_intro-deep-dive.html","id":"todays-context","dir":"Articles","previous_headings":"","what":"Today’s Context","title":"NOAA's Enterprise Hydrofabric System","text":"Everyone asked come USGS Gage ID mind. example, use NWIS gage=06752260. sits Cache La Poudre River FORT COLLINS, CO USGS Next Generation Monitoring Location Page : https://waterdata.usgs.gov/monitoring-location/06752260/ Geoconnex PID can found : https://reference.geoconnex.us/collections/gages/items?provider_id=06752260","code":"xx = dataRetrieval::findNLDI(nwis = '06752260', find = c(\"flowlines\", \"basin\"), nav = \"UM\", distance_km = 1000)  mapview(xx)"},{"path":"/articles/02-design-deep-dive.html","id":"how-do-we-arrive-at-the-nextgen-hydrofabric","dir":"Articles","previous_headings":"","what":"How do we arrive at the NextGen Hydrofabric?","title":"The Reference Fabric","text":"NextGen model engine intended model agnostic. hydrofabric meant Model Application Agnostic. means hydrofabric able support modeling needs applications like: NOAA NextGen (infinite flavors); USGS NHM; USGS SPARROW model; eventually NOAA FIM.","code":""},{"path":"/articles/02-design-deep-dive.html","id":"the-usgs-noaa-reference-fabric","dir":"Articles","previous_headings":"","what":"The USGS-NOAA Reference Fabric","title":"The Reference Fabric","text":"single system serve many - often distinct - modeling applications, needs set reference system. (analogous coordinate reference system (CRS)) reference system must provide maximum (e.g. smallest discretization) set features “allowable” interrelated model applications. Right now, NHDPlusV2 (modifications) future move NHDHighRes 3DHP practice, reference fabrics can built hydrographies (e.g. NGA TDX MERIT) reference fabric key providing persistent identification (PID) durable data integration model interoperability development product collaborative venture USGS Water Mission Area, NOAA Office Water Prediction, Lynker.  documented core data available ","code":""},{"path":[]},{"path":"/articles/02-design-deep-dive.html","id":"reference-features","dir":"Articles","previous_headings":"The USGS-NOAA Reference Fabric > The 3 pillars of a Reference Fabric","what":"1. Reference Features","title":"The Reference Fabric","text":"Simple, valid, representations flowpath divide features Must derived source hydrographic dataset (e.g. NHDPLus, TDXhydro) Currently, built NHDPlusV2 features Waterbodies simplified, islands dissolved, unioned GNIS_ID.  Catchments simplifed, DEM fragments dissolved proper adjoining catchments.  Flowlines ensured digitized upstream downstream burn line events substituted NHDFlowlines headwater catchments data products can foundhere","code":""},{"path":"/articles/02-design-deep-dive.html","id":"reference-topology","dir":"Articles","previous_headings":"The USGS-NOAA Reference Fabric > The 3 pillars of a Reference Fabric","what":"2. Reference Topology","title":"The Reference Fabric","text":"Since first release, NHDPlus topology value added attributes stable Local groups agencies made modifications never made back primary source Improvements made USGS, OWP, NCAR others integrated provide updated network connectivity. data product can found described upcoming article “Generating reference flow network improved connectivity support durable data integration reproducibility coterminous US” {press EMS}","code":""},{"path":[]},{"path":"/articles/02-design-deep-dive.html","id":"corrected-divergence-priorities","dir":"Articles","previous_headings":"The USGS-NOAA Reference Fabric > The 3 pillars of a Reference Fabric > 2. Reference Topology","what":"Corrected divergence priorities","title":"The Reference Fabric","text":"Ultimately changed network shown areas total drainage area 10% different original NHDPlusV2 Network.","code":""},{"path":"/articles/02-design-deep-dive.html","id":"reference-points-of-interest-poi","dir":"Articles","previous_headings":"The USGS-NOAA Reference Fabric > The 3 pillars of a Reference Fabric","what":"3. Reference Points of Interest (POI)","title":"The Reference Fabric","text":"Points Interest hydrologic modelling collected variety published data sources include ones like Army Corp National Inventory Dams USGS Gages III gage database  POIs become hydrolocations outflow linked flowpath robust hydrologic indexing scheme. NOTE: locations deemed high general interest. guarantee gages, dams, thermoelectric plants community set.","code":""},{"path":"/articles/02-design-deep-dive.html","id":"what-is-a-vpu","dir":"Articles","previous_headings":"","what":"What is a VPU?","title":"The Reference Fabric","text":"VPU Vector Processing Unit. USGS determined regions designing NHDPlusV2. Since work builds NHDPlusV2, adopt processing units.  hydrographic networks VPU-esque discritizations. key source hydrofabric discritization can retained manipulation process. show tiling drainage basin approaches MERIT-hydro, BasinMaker, NGA’s TDX-hydro. caption","code":"## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not ## give correct results for longitude/latitude data"},{"path":"/articles/02-design-deep-dive.html","id":"getting-the-reference-fabric","dir":"Articles","previous_headings":"","what":"Getting the reference fabric","title":"The Reference Fabric","text":"reference products live ScienceBase Lynker s3 account. can accessed web interface can downloaded programatically. hydrofab::get_hydrofabric() utility download current geofabric Vector Processing Unit (VPU). example, lets use Geonconnex reference features identify location Fort Collins gage. location can joined set VPU boundaries severed nhdplusTools find correct VPU. requested file already exists, file path returned.","code":"gage = read_sf('https://reference.geoconnex.us/collections/gages/items?provider_id=06752260')  gage = st_join(gage, st_transform(vpu_boundaries, st_crs(gage)))  (gage$VPUID) ## [1] \"10L\" reference_gpkg = get_hydrofabric(VPU = gage$VPUID, type = \"reference\",dir = \"cihro-data\")"},{"path":"/articles/02-design-deep-dive.html","id":"working-with-the-geopackages","dir":"Articles","previous_headings":"","what":"Working with the Geopackages","title":"The Reference Fabric","text":"geopackage critical file format sharing type data (1) self containing (2) compact (3) language agnostic. two broad paths accessing data. first GDAL based approach (R using sf, python Fiona geopandas works well). second SQLite database (R, RSQLite/DBI/dplyr): Ok! , idea reference fabric , made, can get ! next stage learn manipulate reference fabric unique model applications.","code":"# Read Options pacman::p_load(sf, DBI, RSQLite, dplyr)  ### 1. GDAL/geopackage st_layers(reference_gpkg) ## Driver: GPKG  ## Available layers: ##              layer_name geometry_type features fields             crs_name ## 1   reference_waterbody Multi Polygon    21093      6 NAD83 / Conus Albers ## 2   reference_catchment       Polygon   196552      8 NAD83 / Conus Albers ## 3    reference_flowline   Line String   199756     45 NAD83 / Conus Albers ## 4              POIs_10L         Point     8026     14 NAD83 / Conus Albers ## 5    poi_geometry_table         Point     8024      3 NAD83 / Conus Albers ## 6  event_geometry_table         Point      318      5 NAD83 / Conus Albers ## 7     reference_network            NA   199756     20                 <NA> ## 8              poi_data            NA    11516      5                 <NA> ## 9            event_data            NA      320      6                 <NA> ## 10         lookup_table            NA   199830      4                 <NA> nex = read_sf(reference_gpkg, \"POIs_10L\") head(nex) ## Simple feature collection with 6 features and 14 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -879917.6 ymin: 2011489 xmax: -865512.8 ymax: 2026539 ## Projected CRS: NAD83 / Conus Albers ## # A tibble: 6 × 15 ##      COMID Type_HUC12   Type_Gages nexus Type_TE Type_WBOut Type_Term Type_Conf ##      <dbl> <chr>        <chr>      <dbl> <chr>        <dbl>     <dbl>     <dbl> ## 1 15995608 101800010701 NA             0 NA              NA        NA        NA ## 2 15995906 101800010203 NA             0 NA              NA        NA   1135428 ## 3 15996024 101800010202 NA             0 NA              NA        NA        NA ## 4 15995532 101800010201 NA             0 NA              NA        NA        NA ## 5 15996694 101800010305 NA             0 NA              NA        NA   1136099 ## 6 15996702 101800010304 NA             0 NA              NA        NA   1136103 ## # ℹ 7 more variables: Type_WBIn <dbl>, Type_NID <chr>, Type_Elev <dbl>, ## #   Type_Travel <dbl>, id <int>, moved <int>, geom <POINT [m]> ### 2. SQLite/Database db <- dbConnect(SQLite(), reference_gpkg) dbListTables(db) ##  [1] \"POIs_10L\"                               ##  [2] \"event_data\"                             ##  [3] \"event_geometry_table\"                   ##  [4] \"gpkg_contents\"                          ##  [5] \"gpkg_extensions\"                        ##  [6] \"gpkg_geometry_columns\"                  ##  [7] \"gpkg_ogr_contents\"                      ##  [8] \"gpkg_spatial_ref_sys\"                   ##  [9] \"gpkg_tile_matrix\"                       ## [10] \"gpkg_tile_matrix_set\"                   ## [11] \"lookup_table\"                           ## [12] \"poi_data\"                               ## [13] \"poi_geometry_table\"                     ## [14] \"reference_catchment\"                    ## [15] \"reference_flowline\"                     ## [16] \"reference_network\"                      ## [17] \"reference_waterbody\"                    ## [18] \"rtree_POIs_10L_geom\"                    ## [19] \"rtree_POIs_10L_geom_node\"               ## [20] \"rtree_POIs_10L_geom_parent\"             ## [21] \"rtree_POIs_10L_geom_rowid\"              ## [22] \"rtree_event_geometry_table_geom\"        ## [23] \"rtree_event_geometry_table_geom_node\"   ## [24] \"rtree_event_geometry_table_geom_parent\" ## [25] \"rtree_event_geometry_table_geom_rowid\"  ## [26] \"rtree_poi_geometry_table_geom\"          ## [27] \"rtree_poi_geometry_table_geom_node\"     ## [28] \"rtree_poi_geometry_table_geom_parent\"   ## [29] \"rtree_poi_geometry_table_geom_rowid\"    ## [30] \"rtree_reference_catchment_geom\"         ## [31] \"rtree_reference_catchment_geom_node\"    ## [32] \"rtree_reference_catchment_geom_parent\"  ## [33] \"rtree_reference_catchment_geom_rowid\"   ## [34] \"rtree_reference_flowline_geom\"          ## [35] \"rtree_reference_flowline_geom_node\"     ## [36] \"rtree_reference_flowline_geom_parent\"   ## [37] \"rtree_reference_flowline_geom_rowid\"    ## [38] \"rtree_reference_waterbody_geom\"         ## [39] \"rtree_reference_waterbody_geom_node\"    ## [40] \"rtree_reference_waterbody_geom_parent\"  ## [41] \"rtree_reference_waterbody_geom_rowid\"   ## [42] \"sqlite_sequence\" mpoi = collect(tbl(db, \"POIs_10L\"))  head(mpoi) ## # A tibble: 6 × 16 ##     fid       geom    COMID Type_HUC12   Type_Gages nexus Type_TE Type_WBOut ##   <int>     <blob>    <dbl> <chr>        <chr>      <dbl> <chr>        <dbl> ## 1     1 <raw 29 B> 15995608 101800010701 NA             0 NA              NA ## 2     2 <raw 29 B> 15995906 101800010203 NA             0 NA              NA ## 3     3 <raw 29 B> 15996024 101800010202 NA             0 NA              NA ## 4     4 <raw 29 B> 15995532 101800010201 NA             0 NA              NA ## 5     5 <raw 29 B> 15996694 101800010305 NA             0 NA              NA ## 6     6 <raw 29 B> 15996702 101800010304 NA             0 NA              NA ## # ℹ 8 more variables: Type_Term <dbl>, Type_Conf <dbl>, Type_WBIn <dbl>, ## #   Type_NID <chr>, Type_Elev <dbl>, Type_Travel <dbl>, id <int>, moved <int> dbDisconnect(db)"},{"path":"/articles/02-design.html","id":"how-do-we-arrive-at-the-nextgen-hydrofabric","dir":"Articles","previous_headings":"","what":"How do we arrive at the NextGen Hydrofabric?","title":"NOAA's Enterprise Hydrofabric System","text":"NextGen model engine intended model agnostic. hydrofabric meant Model Application Agnostic. means hydrofabric able support modeling needs applications like: NOAA NextGen (infinite flavors); USGS NHM; USGS SPPARROW model; eventually NOAA FIM.","code":""},{"path":"/articles/02-design.html","id":"the-usgs-noaa-reference-fabric","dir":"Articles","previous_headings":"","what":"The USGS-NOAA Reference Fabric","title":"NOAA's Enterprise Hydrofabric System","text":"single system serve many - often distinct - modeling applications, needs set reference system. (analogous coordinate reference system (CRS)) reference system must provide maximum (e.g. smallest discretization) set features “allowable” interrelated model applications. Right now, NHDPlusV2 (modifications) future move NHDHighRes 3DHP practice, reference fabrics can built hydrographies (e.g. NGA TDX MERIT) refernence fabric key providing persistent identification (PID) durable data integration model interoprobility development product collaborative venture USGS Water Mission Area, NOAA Office Water Prediction, Lynker.  documented ","code":""},{"path":"/articles/02-design.html","id":"the-3-pillars-of-a-reference-fabric","dir":"Articles","previous_headings":"The USGS-NOAA Reference Fabric","what":"The 3 pillars of a Reference Fabric","title":"NOAA's Enterprise Hydrofabric System","text":"https://www.sciencebase.gov/catalog/item/60be0e53d34e86b93891012b","code":""},{"path":"/articles/02-design.html","id":"reference-features","dir":"Articles","previous_headings":"The USGS-NOAA Reference Fabric","what":"1. Reference Features","title":"NOAA's Enterprise Hydrofabric System","text":"Simple, valid, representations flowpath divide features Must derived source hydrographic dataset (e.g. NHDPLus, ) Currently, built NHDPlusV2 features Waterbodies simplified, islands dissolved, unioned GNIS_ID. Flowlines ensured digitized upsteam downstream Catchments simplifed, DEM fragments dissolved proper adjoing catchments. data products can found ","code":""},{"path":"/articles/02-design.html","id":"reference-topology","dir":"Articles","previous_headings":"The USGS-NOAA Reference Fabric","what":"2. Reference Topology","title":"NOAA's Enterprise Hydrofabric System","text":"Since first release, NHDPlus topology value added attributes stable Local groups agencies made modifications never made back primary source Improvements made USGS, OWP, NCAR integrated provide updated network connectivity. data products can found    “Generating reference flow network improved connectivity support durable data integration reproducibility coterminous US” {press}","code":""},{"path":"/articles/02-design.html","id":"reference-pois","dir":"Articles","previous_headings":"The USGS-NOAA Reference Fabric","what":"3. Reference POIs","title":"NOAA's Enterprise Hydrofabric System","text":"Collected variety published data sources POIs become hydrolocations outflow linked flowpath.","code":"## Driver: GPKG  ## Available layers: ##             layer_name geometry_type features fields             crs_name ## 1 refactored_flowpaths   Line String    41117      7 NAD83 / Conus Albers ## 2   refactored_divides Multi Polygon    41115      4 NAD83 / Conus Albers ## 3        split_divides Multi Polygon      569      2 NAD83 / Conus Albers ## 4          mapped_POIs         Point     3496     22 NAD83 / Conus Albers ## 5         lookup_table            NA    65370      4                 <NA> ## 6    catchment_network            NA    41117      5                 <NA>"},{"path":"/articles/02-design.html","id":"what-is-a-vpu","dir":"Articles","previous_headings":"","what":"What is a VPU?","title":"NOAA's Enterprise Hydrofabric System","text":"VPU Vector Processing Unit. USGS determined regions designing NHDPlusV2. Since work builds NHDPlusV2, adopt processing units.","code":"ggplot(data = vpu_boundaries[1:21,]) +    geom_sf(data = vpu_boundaries[1:21,]) +    geom_sf_label(aes(label = VPUID)) +    theme_void() ## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not ## give correct results for longitude/latitude data"},{"path":"/articles/02-design.html","id":"getting-the-reference-fabric","dir":"Articles","previous_headings":"","what":"Getting the reference fabric","title":"NOAA's Enterprise Hydrofabric System","text":"reference products live ScienceBase. can accessed web interface can downloaded programatically. hydrofab::get_hydrofabric() utility download current geofabric Vector Processing Unit (VPU). requested file already exists, file path returned. example, lets use Geonconnex reference featrues identify location Fort Collins, CO gage. locations can joined set VPU boundaries severed nhdplusTools find correct VPU. can download reference fabric VPU=10L assigned base directory, explore layers contained within:","code":"gage = read_sf('https://reference.geoconnex.us/collections/gages/items?provider_id=06752260')  gage = st_join(gage, st_transform(vpu_boundaries, st_crs(gage)))  (gage$VPUID) ## [1] \"10L\" base <- \"tmp-data\" dir.create(base) ## Warning in dir.create(base): 'tmp-data' already exists reference_gpkg = get_hydrofabric(VPU = \"01\",                                   type = \"refactor\",                                  dir = base,                                  overwrite = TRUE) ##    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |==                                                                    |   4%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  16%   |                                                                               |============                                                          |  17%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |================                                                      |  24%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |=====================                                                 |  31%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |=======================                                               |  34%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |============================                                          |  41%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |==============================                                        |  44%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |===================================                                   |  51%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |=====================================                                 |  54%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  56%   |                                                                               |========================================                              |  57%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |============================================                          |  64%   |                                                                               |=============================================                         |  64%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  79%   |                                                                               |========================================================              |  80%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |==========================================================            |  84%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |=================================================================     |  94%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100%"},{"path":"/articles/02-design.html","id":"working-with-the-geopackages","dir":"Articles","previous_headings":"","what":"Working with the Geopackages","title":"NOAA's Enterprise Hydrofabric System","text":"geopackage critical file format sharing type data (1) self containing (2) compact (3) language agnostic. two broad paths accessing data. first GDAL based approach (R using sf, python Fiona geopandas works well). second SQLite database (R, RSQLite/DBI/dplyr):","code":"# Read Options pacman::p_load(sf, DBI, RSQLite, dplyr)  ### 1. GDAL/geopackage st_layers(reference_gpkg) ## Driver: GPKG  ## Available layers: ##             layer_name geometry_type features fields             crs_name ## 1 refactored_flowpaths   Line String    41117      7 NAD83 / Conus Albers ## 2   refactored_divides Multi Polygon    41115      4 NAD83 / Conus Albers ## 3        split_divides Multi Polygon      569      2 NAD83 / Conus Albers ## 4          mapped_POIs         Point     3496     22 NAD83 / Conus Albers ## 5         lookup_table            NA    65370      4                 <NA> ## 6    catchment_network            NA    41117      5                 <NA> nex = read_sf(reference_gpkg, \"mapped_POIs\") head(nex) ## Simple feature collection with 6 features and 22 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 2009569 ymin: 2883035 xmax: 2029956 ymax: 2967498 ## Projected CRS: NAD83 / Conus Albers ## # A tibble: 6 × 23 ##         ID    toID set   identifier COMID Type_HUC12 Type_Gages Type_TE Type_NID ##      <dbl>   <dbl> <chr>      <int> <chr> <chr>      <chr>      <chr>   <chr>    ## 1 10000000  1.00e7 1004…          1 7170… 010100020… NA         NA      NA       ## 2 10000011  1.00e7 1000…          2 7179… 010100020… NA         NA      NA       ## 3 10000043  1.00e7 1000…          3 7189… 010100020… NA         NA      NA       ## 4 10000053  1.00e7 1000…          4 7184… 010100020… NA         NA      NA       ## 5 10000070  1.00e7 1000…          5 7200… 010100020… NA         NA      NA       ## 6 10000079  1.00e7 1000…          6 7200… 010100020… NA         NA      NA       ## # ℹ 14 more variables: Type_WBIn <chr>, Type_WBOut <chr>, Type_Conf <chr>, ## #   Type_Term <chr>, Type_Elev <chr>, Type_Travel <chr>, nexus <chr>, ## #   snapped <lgl>, TotDASqKM <dbl>, DnHydroseq <int>, type <chr>, ## #   member_COMID <chr>, Type_Con <dbl>, geom <POINT [m]> ### 2. SQLite/Database db <- dbConnect(SQLite(), reference_gpkg) dbListTables(db) ##  [1] \"catchment_network\"                      ##  [2] \"gpkg_contents\"                          ##  [3] \"gpkg_extensions\"                        ##  [4] \"gpkg_geometry_columns\"                  ##  [5] \"gpkg_ogr_contents\"                      ##  [6] \"gpkg_spatial_ref_sys\"                   ##  [7] \"gpkg_tile_matrix\"                       ##  [8] \"gpkg_tile_matrix_set\"                   ##  [9] \"lookup_table\"                           ## [10] \"mapped_POIs\"                            ## [11] \"refactored_divides\"                     ## [12] \"refactored_flowpaths\"                   ## [13] \"rtree_mapped_POIs_geom\"                 ## [14] \"rtree_mapped_POIs_geom_node\"            ## [15] \"rtree_mapped_POIs_geom_parent\"          ## [16] \"rtree_mapped_POIs_geom_rowid\"           ## [17] \"rtree_refactored_divides_geom\"          ## [18] \"rtree_refactored_divides_geom_node\"     ## [19] \"rtree_refactored_divides_geom_parent\"   ## [20] \"rtree_refactored_divides_geom_rowid\"    ## [21] \"rtree_refactored_flowpaths_geom\"        ## [22] \"rtree_refactored_flowpaths_geom_node\"   ## [23] \"rtree_refactored_flowpaths_geom_parent\" ## [24] \"rtree_refactored_flowpaths_geom_rowid\"  ## [25] \"rtree_split_divides_geom\"               ## [26] \"rtree_split_divides_geom_node\"          ## [27] \"rtree_split_divides_geom_parent\"        ## [28] \"rtree_split_divides_geom_rowid\"         ## [29] \"split_divides\"                          ## [30] \"sqlite_sequence\" fpa = collect(tbl(db, \"mapped_POIs\"))  head(fpa) ## # A tibble: 6 × 24 ##     fid       geom       ID    toID set   identifier COMID Type_HUC12 Type_Gages ##   <int>     <blob>    <dbl>   <dbl> <chr>      <int> <chr> <chr>      <chr>      ## 1     1 <raw 29 B> 10000000  1.00e7 1004…          1 7170… 010100020… NA         ## 2     2 <raw 29 B> 10000011  1.00e7 1000…          2 7179… 010100020… NA         ## 3     3 <raw 29 B> 10000043  1.00e7 1000…          3 7189… 010100020… NA         ## 4     4 <raw 29 B> 10000053  1.00e7 1000…          4 7184… 010100020… NA         ## 5     5 <raw 29 B> 10000070  1.00e7 1000…          5 7200… 010100020… NA         ## 6     6 <raw 29 B> 10000079  1.00e7 1000…          6 7200… 010100020… NA         ## # ℹ 15 more variables: Type_TE <chr>, Type_NID <chr>, Type_WBIn <chr>, ## #   Type_WBOut <chr>, Type_Conf <chr>, Type_Term <chr>, Type_Elev <chr>, ## #   Type_Travel <chr>, nexus <chr>, snapped <int>, TotDASqKM <dbl>, ## #   DnHydroseq <int>, type <chr>, member_COMID <chr>, Type_Con <dbl> dbDisconnect(db)"},{"path":[]},{"path":"/articles/03-processing-deep-dive.html","id":"getting-the-reference-fabric","dir":"Articles","previous_headings":"","what":"Getting the reference fabric","title":"Network Manipulation","text":"reference (precomputed) refactored data products live ScienceBase. can accessed web interface can downloaded programatically. hydrofab::get_hydrofabric() utility download current geofabric Vector Processing Unit (VPU). Options include downloading “refactored” (default) “reference” data. requested file already exists, file path returned.","code":""},{"path":"/articles/03-processing-deep-dive.html","id":"example","dir":"Articles","previous_headings":"Getting the reference fabric","what":"Example","title":"Network Manipulation","text":"Define terminal location interest Subset upstream reference fabric using hydrofab::subset_reference","code":"library(hydrofabric)  # Define starting feature by source and ID (nldi_feature = list(featureSource = \"nwis\", featureID = \"06752260\"))  # Use this feature to build a reference subset   # This function uses the NLDI to identify an upstream tributary   # and SQL to extract a subset GPKG subset_reference(nldi_feature = nldi_feature,                   gpkg = get_hydrofabric(VPU = \"10L\",  type = \"reference\", dir = \"cihro-data\"),                  export_gpkg = \"cihro-data/reference.gpkg\")"},{"path":[]},{"path":"/articles/03-processing-deep-dive.html","id":"concept","dir":"Articles","previous_headings":"1) Running the Process: Refactoring","what":"Concept","title":"Network Manipulation","text":"Refactoring geoprocessing workflow seeks Split large long catchments uniform catchment size distribution collapse catchment topology eliminate small catchments fundamental key network resolution lost! means total path length network going , comes . workflow can parameterized using three primary values: might also areas want avoid, , enforce splitting event. can defined following values: POI definition selection model application specific. , ignore aspect. information network, refactor can refactor flowpath network. order reconcile catchment network,set flow accumulation (FAC) flow direction (FDR) grids must provided. reference fabric (e.g. NHDPlusV2), supply national VRT can accessed : s3://nextgen-hydrofabric/DEM-products/{product}.vrt (gridded products) can found ","code":""},{"path":"/articles/03-processing-deep-dive.html","id":"example-1","dir":"Articles","previous_headings":"1) Running the Process: Refactoring","what":"Example","title":"Network Manipulation","text":"","code":"refactor = refactor(gpkg = \"cihro-data/reference.gpkg\",                     split_flines_meters = 10000,                      collapse_flines_meters = 1000,                      collapse_flines_main_meters = 1000,                     fac = '/vsis3/nextgen-hydrofabric/gridded-resources/fac.vrt',                     fdr = '/vsis3/nextgen-hydrofabric/gridded-resources/fdr.vrt',                     outfile = \"cihro-data/refactor.gpkg\")"},{"path":"/articles/03-processing-deep-dive.html","id":"outputs","dir":"Articles","previous_headings":"1) Running the Process: Refactoring","what":"Outputs","title":"Network Manipulation","text":"get high level understanding happened “refactor”, can look length distributions:  area distributions:  Lastly, look feature count network:  Finally, can zoom layer network see changes exist. figure , white edges represent reference catchment network, black edges represent refactored network Since refactoring requires preservation flowpath network, blue lines representative reference refactored network caveat broken different places.","code":""},{"path":"/articles/03-processing-deep-dive.html","id":"running-the-process-aggregating","dir":"Articles","previous_headings":"","what":"2. Running the Process: Aggregating","title":"Network Manipulation","text":"Aggregation primarily divide oriented workflow. collapses network provide new discretization. Two aggregation methods: POIs - define network outlets (NHM SPARROW) statistical distribution, w/o enforced POIs (NextGen).  , hydrolocation POINT layer can passed help direct aggregation, simplicity ignored :","code":""},{"path":"/articles/03-processing-deep-dive.html","id":"example-2","dir":"Articles","previous_headings":"2. Running the Process: Aggregating","what":"Example","title":"Network Manipulation","text":"","code":"aggregate_to_distribution(gpkg = \"cihro-data/refactor.gpkg\",                           ideal_size_sqkm = 10,                            min_length_km = 1,                            min_area_sqkm = 3,                            outfile = \"cihro-data/aggregate.gpkg\")"},{"path":"/articles/03-processing-deep-dive.html","id":"outputs-1","dir":"Articles","previous_headings":"2. Running the Process: Aggregating","what":"Outputs","title":"Network Manipulation","text":"get high level understanding happens “refactor”, can look length distributions:  area distributions:  Finally, can zoom layer network see changes exist. left-hand figure , white edges represent reference catchment network, black edges represent refactored network, red represnet aggregated network right-hand figure, can see blue flowlines (reference refactor) prunned aggregation process.  Lastly, can look cumulative network traits fabric:  refactored output shared Refactored Parent item ScienceBase resource (available ). also avaliable Lynker s3 account ","code":""},{"path":"/articles/03-processing-deep-dive.html","id":"nextgen","dir":"Articles","previous_headings":"","what":"3) NextGen","title":"Network Manipulation","text":"network aggregated scale matching desired hydrologic processes need turn something NextGen can use (modeling task)","code":""},{"path":"/articles/03-processing-deep-dive.html","id":"divergent-topology","dir":"Articles","previous_headings":"3) NextGen","what":"Divergent Topology","title":"Network Manipulation","text":"Nextgen operates [flowpath --> nexus] vs [flowpath --> flowpath] topology due HY Features conceptula catchment 1 inflow draining one outflow. example can seen : caption","code":""},{"path":"/articles/03-processing-deep-dive.html","id":"character-based-indentification","dir":"Articles","previous_headings":"3) NextGen","what":"Character based indentification","title":"Network Manipulation","text":"Nextgen requires integer based identification, like described data model, prefixed character string defining feature Right now, following prefixs used distiguish type model features. following function (1) identifies nexus locations, (2) moves needed (3) applies schema features. can see results opening hydrofabric adding map!","code":"apply_nexus_topology(gpkg = \"cihro-data/aggregate.gpkg\", export_gpkg = \"cihro-data/nextgen.gpkg\") nexus = read_sf(\"cihro-data/nextgen.gpkg\", \"nexus\")   read_hydrofabric(\"cihro-data/nextgen.gpkg\") %>%    mapview() +    nexus"},{"path":"/articles/03-processing-deep-dive.html","id":"extending-nwm-attributes","dir":"Articles","previous_headings":"3) NextGen","what":"Extending NWM attributes","title":"Network Manipulation","text":"core utilities provide series flowpath, divide, nexuses. However, information needed run /NextGen formulations. include following:","code":"sf::st_layers(\"cihro-data/nextgen.gpkg\") #> Driver: GPKG  #> Available layers: #>            layer_name geometry_type features fields             crs_name #> 1             divides       Polygon      832      9 NAD83 / Conus Albers #> 2               nexus         Point      411      4 NAD83 / Conus Albers #> 3           flowpaths   Line String      832     10 NAD83 / Conus Albers #> 4             network            NA     1540     15                 <NA> #> 5 flowpath_attributes            NA      832     16                 <NA>"},{"path":"/articles/03-processing-deep-dive.html","id":"lake-attributes","dir":"Articles","previous_headings":"3) NextGen > Extending NWM attributes","what":"Lake Attributes","title":"Network Manipulation","text":"WBOut Hydrolocations mapped NHDPlusWaterBody COMIDs used NWM.","code":""},{"path":"/articles/03-processing-deep-dive.html","id":"flowpath-attributes","dir":"Articles","previous_headings":"3) NextGen","what":"Flowpath Attributes","title":"Network Manipulation","text":"Flowpath attributes extracted Routelink file values length averaged portion length makes refactored/aggregated network example, 75m flowline roughness 0.05 25m flowline roughness 0.2 Flowpaths attributes lake parameters can added pointing set NWM domain files like found ","code":"(n = (.75 * .05) + (.25 * .2)) #> [1] 0.0875 add_flowpath_attributes(\"cihro-data/nextgen.gpkg\",                          rl_path = \"/Volumes/MyBook/nextgen/RouteLink_nwm_v2_2_3.fst\") %>%    add_lake_attributes(lake_path = '/Volumes/Transcend/nwmCONUS-v216/LAKEPARM_CONUS.nc')"},{"path":"/articles/03-processing-deep-dive.html","id":"cfenoah-owp-attributes","dir":"Articles","previous_headings":"3) NextGen","what":"CFE/NOAH-OWP attributes","title":"Network Manipulation","text":"Catchment attribute data needed run formulations like CFE NOAH-OWP. can computed using following logic. default, code take gridded data supplied soilproperties_CONUS_FullRouting.nc, wrfinput_CONUS, GWBUCKPARM_CONUS_FullRouting.nc computes following summaries:","code":"add_cfe_noahowp_attributes(gpkg        = 'cihro-data/nextgen.gpkg\"',                             nwm_dir     = \"/Volumes/Transcend/nwmCONUS-v216/\",                             outfile     = 'cihro-data/cfe_noahowp.parquet')"},{"path":"/articles/03-processing-deep-dive.html","id":"themeing","dir":"Articles","previous_headings":"3) NextGen > CFE/NOAH-OWP attributes","what":"Themeing","title":"Network Manipulation","text":"option, QGIS QML theming files can added gpkg. default themeing files come hydrofabric can specified/added append_styles utility desired layer_names QGIS, double clicking gpkg file allow select layers load.","code":"append_style(\"cihro-data/nextgen.gpkg\", layer_names = c(\"nexus\", \"hydrolocations\", \"flowpaths\", \"divides\", \"lakes\"))"},{"path":"/articles/03-processing-deep-dive.html","id":"full-run-through","dir":"Articles","previous_headings":"","what":"Full Run-through","title":"Network Manipulation","text":"","code":"reference_gpkg = get_hydrofabric(VPU = \"10L\",  type = \"reference\", dir = \"cihro-data\")  # Define starting feature by source and ID list(featureSource = \"nwis\", featureID = \"06752260\") %>%    # Subset Reference   subset_reference(gpkg = reference_gpkg,                    export_gpkg = \"cihro-data/reference.gpkg\")     refactor(gpkg = \"cihro-data/reference.gpkg\",            split_flines_meters = 10000,             collapse_flines_meters = 1000,             collapse_flines_main_meters = 1000,            fac = '/vsis3/nextgen-hydrofabric/gridded-resources/fac.vrt',            fdr = '/vsis3/nextgen-hydrofabric/gridded-resources/fdr.vrt',            outfile = \"cihro-data/refactor.gpkg\") %>%    aggregate_to_distribution(ideal_size_sqkm = 10,                            min_length_km = 1,                            min_area_sqkm = 3,                            outfile = \"cihro-data/aggregate.gpkg\") %>%    apply_nexus_topology(export_gpkg = \"cihro-data/nextgen.gpkg\") %>%    add_flowpath_attributes(rl_path = \"/Volumes/MyBook/nextgen/RouteLink_nwm_v2_2_3.fst\") %>%   add_lake_attributes(lake_path = '/Volumes/Transcend/nwmCONUS-v216/LAKEPARM_CONUS.nc') %>%   append_style(layer_names = c(\"nexus\", \"hydrolocations\", \"flowpaths\", \"divides\", \"lakes\"))  add_cfe_noahowp_attributes(gpkg        = 'cihro-data/nextgen.gpkg\"',                            nwm_dir     = \"nwm-data\",                            outfile     = 'cihro-data/cfe_noahowp.parquet')"},{"path":"/articles/03-processing-deep-dive.html","id":"nhdplustools","dir":"Articles","previous_headings":"Full Run-through","what":"nhdplusTools:","title":"Network Manipulation","text":"network manipulations, fundamental network traits change. requires utilities rapidly efficiently recopute key network metric. nhdplusTools package provides option regenerate fly using graph algroithms logic. return get_sorted() utility subsetting section","code":"nhdplusTools::add_plus_network_attributes() nhdplusTools::get_streamorder() nhdplusTools::calculate_total_drainage_area() nhdplusTools::get_sorted()"},{"path":"/articles/04-data-model-deep-dive.html","id":"data-model","dir":"Articles","previous_headings":"","what":"Data Model","title":"The NextGen Hydrofabic Data Model","text":"rigorous data model developed provide minimal, yet efficient, types data needed modeling, hydrofabric subsetting, cross walking, indexing. Much design stems OGC report modifications made NextGen modelling application. current data model contains 7 data layers anticipated 8th water bodies. 5 spatial 2 -spatial highlighting value geopackage model:","code":""},{"path":"/articles/04-data-model-deep-dive.html","id":"divides","dir":"Articles","previous_headings":"","what":"1. Divides","title":"The NextGen Hydrofabic Data Model","text":"Divides represent incremental area draining flowpath. one-dimensional, hydrology-specific realization holistic catchment. Geometrically, divide edge bounded inflow outflow nodes forming POLYGON","code":""},{"path":"/articles/04-data-model-deep-dive.html","id":"divide-type","dir":"Articles","previous_headings":"1. Divides","what":"Divide Type","title":"The NextGen Hydrofabic Data Model","text":"Divides provide continuous coverage modeling domain. majority domain dendritic, areas divide flow, , flow divide. example: coastal divide area, flowpath. internally draining region (sink) area, flow path artificial path (canal) flowpath, associated drainage area divide flowpath representation exisit, 1:1 relationship meaning one flowpath representation divide. case numeric ID future, support ability 1:many divide:*flowline* representations","code":"divides = read_sf(poudre, \"divides\") mapview(divides[5,])"},{"path":"/articles/04-data-model-deep-dive.html","id":"flowpaths","dir":"Articles","previous_headings":"","what":"2. Flowpaths","title":"The NextGen Hydrofabic Data Model","text":"flowpath references path moving particle water flowpath can represented edge bounded inflow outflow nodes, associated left-bank right-bank sub-catchment faces. Geometrically, flowpath LINESTRING connecting inflow outflow level sinuosity representation flowpath can change per modeling application straight line “infinity” sinuous","code":"# Read in all flowpaths flowpaths = read_sf(poudre, \"flowpaths\")  # Define outflow outflow  =  slice_max(flowpaths, hydroseq)   mapview(outflow) +    filter(divides, divide_id == outflow$divide_id)"},{"path":"/articles/04-data-model-deep-dive.html","id":"durable-integration","dir":"Articles","previous_headings":"2. Flowpaths","what":"Durable Integration","title":"The NextGen Hydrofabic Data Model","text":"Many fields hydrofabric designed remain resilient refactor/aggregation process. Many related network indexing integration primary one mainstem identifier intended remain persistent across network manipulations data model described detail video Anything mapped shared mainstem ID (observations, models, etc) can shared across realizations become “durable”","code":"# Mainstem Persistent Identifier (pid = glue(\"https://geoconnex.us/ref/mainstems/{outflow$mainstem}\")) ## https://geoconnex.us/ref/mainstems/352913 # Geonconnex PID mainstem read for URL geoconnex_mainstem = read_sf(pid)  # Mainstem defined by membership of the outlets hf_mainstem = filter(flowpaths, mainstem == outflow$mainstem)  # View mapview(geoconnex_mainstem) +    mapview(hf_mainstem, color = \"red\")"},{"path":"/articles/04-data-model-deep-dive.html","id":"nexus","dir":"Articles","previous_headings":"","what":"3. Nexus","title":"The NextGen Hydrofabic Data Model","text":"nexus provides conceptual outlet water contained catchment. locations NextGen exchange information! defined POIs Others defined locations network 1:1 inflow outflow occur Every catchment flows hydro nexus, conversely every location hydrologic system can thought hydro nexus drains catchment(s).","code":""},{"path":"/articles/04-data-model-deep-dive.html","id":"consequense-of-network-aggregation","dir":"Articles","previous_headings":"3. Nexus","what":"Consequense of Network Aggregation","title":"The NextGen Hydrofabic Data Model","text":"one divide/flowpath (e.g. catchment) can contribute single nexus:","code":"count = sort(table(divides$toid), decreasing= TRUE)   (example = names(count[count == 3][1])) ## [1] \"nex-278677\" (sub_divides = filter(divides, toid == example)) ## Simple feature collection with 3 features and 9 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -822945 ymin: 1992135 xmax: -814845 ymax: 1998225 ## Projected CRS: NAD83 / Conus Albers ## # A tibble: 3 × 10 ##   divide_id  toid      type  ds_id areasqkm id    lengthkm tot_drainage_areasqkm ## * <chr>      <chr>     <chr> <dbl>    <dbl> <chr>    <dbl>                 <dbl> ## 1 cat-278676 nex-2786… netw…    NA     8.76 wb-2…     5.79                212.   ## 2 cat-302482 nex-2786… netw…    NA    10.8  wb-3…     5.93                 10.8  ## 3 cat-307410 nex-2786… netw…    NA     4.60 wb-3…     3.97                  4.60 ## # ℹ 2 more variables: has_flowline <int>, geom <MULTIPOLYGON [m]>"},{"path":"/articles/04-data-model-deep-dive.html","id":"hydrolocations","dir":"Articles","previous_headings":"","what":"4. Hydrolocations","title":"The NextGen Hydrofabic Data Model","text":"hydrolocation can define location hydrologic significance located “” hydrologic network given dataset, hydrolocations may may associated hydrologic nexus catchment feature. cases, hydro locations typically linearly-referenced defined set flowpaths. Topologically, hydro-location can understood inlet outlet node located end flowpath edge. NextGen design, subset community POIs, treated hydrolocations network refactored aggregated “”. Collectively can help find, link data!","code":"hl = filter(hydrolocations, id == outflow$toid)  filter(hydrolocations, hl_uri == \"Gages-06752260\") ## Simple feature collection with 1 feature and 6 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -760037.4 ymin: 1989138 xmax: -760037.4 ymax: 1989138 ## Projected CRS: NAD83 / Conus Albers ## # A tibble: 1 × 7 ##   hl_id hl_reference hl_link  hl_uri hl_position id               geometry ## * <chr> <chr>        <chr>    <chr>  <chr>       <chr>         <POINT [m]> ## 1 8118  Gages        06752260 Gages… outflow     nex-… (-760037.4 1989138) glimpse(hl) ## Rows: 1 ## Columns: 7 ## $ hl_id        <chr> \"8118\" ## $ hl_reference <chr> \"Gages\" ## $ hl_link      <chr> \"06752260\" ## $ hl_uri       <chr> \"Gages-06752260\" ## $ hl_position  <chr> \"outflow\" ## $ id           <chr> \"nex-278699\" ## $ geometry     <POINT [m]> POINT (-760037.4 1989138) (pid = glue('https://reference.geoconnex.us/collections/{tolower(hl$hl_reference)}/items?provider_id={hl$hl_link}')) ## https://reference.geoconnex.us/collections/gages/items?provider_id=06752260 pid = read_sf(pid)  glimpse(pid) ## Rows: 1 ## Columns: 13 ## $ id                   <chr> \"1015611\" ## $ fid                  <int> 70633 ## $ name                 <chr> \"CACHE LA POUDRE RIVER AT FORT COLLINS, CO\" ## $ subjectof            <chr> \"https://waterdata.usgs.gov/monitoring-location/0… ## $ provider_id          <chr> \"06752260\" ## $ nhdpv2_reach_measure <dbl> 46.32248 ## $ mainstem_uri         <chr> \"https://geoconnex.us/ref/mainstems/352913\" ## $ description          <chr> \"USGS NWIS Stream/River/Lake Site 06752260: CACHE… ## $ uri                  <chr> \"https://geoconnex.us/ref/gages/1015611\" ## $ provider             <chr> \"https://waterdata.usgs.gov\" ## $ nhdpv2_reachcode     <chr> \"10190007000017\" ## $ nhdpv2_comid         <dbl> 2900003 ## $ geometry             <POINT [°]> POINT (-105.0692 40.58808) #Use the hl_link to extract this weeks rain event instFlow <- dataRetrieval::readNWISdata(   sites = hl$hl_link, service = \"iv\",   parameterCd = \"00060\",   startDate = \"2023-05-10\" )  # Use PID COMID to extract the 42 year NWM flow record nwm21 = nwmTools::readNWMdata(comid = pid$nhdpv2_comid)"},{"path":"/articles/04-data-model-deep-dive.html","id":"multiplicity","dir":"Articles","previous_headings":"4. Hydrolocations","what":"Multiplicity","title":"The NextGen Hydrofabic Data Model","text":"data design hydrolocation location layer intends represent realization POI independently. means can shared hl_id id (nexus location) distinct hl_reference, hl_link","code":"(poi = filter(hydrolocations, hl_id == 7253)) ## Simple feature collection with 3 features and 6 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -768368.2 ymin: 1991210 xmax: -768368.2 ymax: 1991210 ## Projected CRS: NAD83 / Conus Albers ## # A tibble: 3 × 7 ##   hl_id hl_reference hl_link  hl_uri hl_position id               geometry ## * <chr> <chr>        <chr>    <chr>  <chr>       <chr>         <POINT [m]> ## 1 7253  HUC12        1019000… HUC12… outflow     nex-… (-768368.2 1991210) ## 2 7253  NID          CO01659… NID-C… outflow     nex-… (-768368.2 1991210) ## 3 7253  WBOut        2897349  WBOut… outflow     nex-… (-768368.2 1991210)"},{"path":"/articles/04-data-model-deep-dive.html","id":"rigorous-community-poi-mapping","dir":"Articles","previous_headings":"4. Hydrolocations","what":"Rigorous community POI mapping","title":"The NextGen Hydrofabic Data Model","text":"geoconnex PID can provide location source data. can see community POI moved slightly integrate reference network:","code":"geoconnex = read_sf('https://reference.geoconnex.us/collections/dams/items?provider_id=CO01659')  mapview(geoconnex, color = \"red\") + poi"},{"path":"/articles/04-data-model-deep-dive.html","id":"network","dir":"Articles","previous_headings":"","what":"5. Network","title":"The NextGen Hydrofabic Data Model","text":"network layer tabular spatial information provides ultimate cross walk NextGen fabric, source hydrofabric, mapped hydrolocations. network key hydroindexing, data query, network subsetting.","code":""},{"path":"/articles/04-data-model-deep-dive.html","id":"example","dir":"Articles","previous_headings":"5. Network","what":"Example:","title":"The NextGen Hydrofabic Data Model","text":"NextGen ID near ? Lets say lived location Laporte, CO can use NLDI map reference fabric point, search reference fabric hf_id merged current network:","code":"pt = st_sfc(st_point(c(-105.14044,  40.62949)), crs = 4326) mapview(pt) (x = findNLDI(location = pt)) ## $origin ## Simple feature collection with 1 feature and 3 fields ## Geometry type: LINESTRING ## Dimension:     XY ## Bounding box:  xmin: -105.1512 ymin: 40.61313 xmax: -105.1206 ymax: 40.62606 ## Geodetic CRS:  WGS 84 ## # A tibble: 1 × 4 ##   sourceName    identifier comid                                        geometry ##   <chr>         <chr>      <chr>                                <LINESTRING [°]> ## 1 NHDPlus comid 2899849    2899849 (-105.1512 40.62592, -105.1489 40.62606, -10… (n = filter(read_sf(poudre, \"network\"), hf_id == x$origin$comid)) ## # A tibble: 1 × 15 ##   id       toid  divide_id ds_id mainstem hl_id hydroseq hl_uri hf_source  hf_id ##   <chr>    <chr> <chr>     <dbl>    <int> <chr>    <int> <chr>  <chr>      <dbl> ## 1 wb-2786… nex-… cat-2786…    NA   352913 NA       11625 NA     NHDPlusV2 2.90e6 ## # ℹ 5 more variables: lengthkm <dbl>, areasqkm <dbl>, ## #   tot_drainage_areasqkm <dbl>, type <chr>, vpu <chr> mapview(filter(flowpaths, id == n$id)) +    filter(divides, divide_id == n$divide_id) +   filter(nexus, id == n$toid) +    pt"},{"path":"/articles/04-data-model-deep-dive.html","id":"flowpath-attributes","dir":"Articles","previous_headings":"","what":"6. Flowpath Attributes","title":"The NextGen Hydrofabic Data Model","text":"Flowpath attributes extracted NWM Routelink file. network layer used “length weight average” attributes new network.","code":""},{"path":"/articles/04-data-model-deep-dive.html","id":"lakes","dir":"Articles","previous_headings":"","what":"7. Lakes","title":"The NextGen Hydrofabic Data Model","text":"Lake attributes extracted NWM Lake file file. network layer used “length weight average” attributes new network.","code":"lakes = read_sf(poudre, \"lakes\") %>%    filter(hl_id == 7253) %>%    glimpse() ## Rows: 1 ## Columns: 18 ## $ id           <chr> \"nex-287191\" ## $ toid         <chr> \"wb-287191\" ## $ hl_id        <chr> \"7253\" ## $ hl_reference <chr> \"WBOut\" ## $ hl_link      <dbl> 2897349 ## $ hl_uri       <chr> \"WBOut-2897349\" ## $ Dam_Length   <dbl> 10 ## $ ifd          <dbl> 0.9 ## $ LkArea       <dbl> 6.87471 ## $ LkMxE        <dbl> 1678.71 ## $ OrificeA     <dbl> 1 ## $ OrificeC     <dbl> 0.1 ## $ OrificeE     <dbl> 1625.35 ## $ time         <dbl> 0 ## $ WeirC        <dbl> 0.4 ## $ WeirE        <dbl> 1670.706 ## $ WeirL        <dbl> 10 ## $ geom         <POINT> POINT (-768368.2 1991210)"},{"path":"/articles/04-data-model-deep-dive.html","id":"layer-style","dir":"Articles","previous_headings":"","what":"8. Layer Style","title":"The NextGen Hydrofabic Data Model","text":"open hydrofabric gpkg created many hydrofab tools, find load consistent symbology. symbologies saved Geopackage using hydrofab::append_style() Built reference QGIS QML files.","code":"read_sf(poudre, \"layer_styles\") %>%  glimpse() ## Rows: 5 ## Columns: 12 ## $ f_table_catalog   <chr> \"\", \"\", \"\", \"\", \"\" ## $ f_table_schema    <chr> \"\", \"\", \"\", \"\", \"\" ## $ f_table_name      <chr> \"divides\", \"nexus\", \"flowpaths\", \"hydrolocations\", \"… ## $ f_geometry_column <chr> \"geom\", \"geom\", \"geom\", \"geom\", \"geom\" ## $ styleName         <chr> \"divides__hydrofabric_style\", \"nexus__hydrofabric_st… ## $ styleQML          <chr> \"<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'S… ## $ styleSLD          <chr> \"\", \"\", \"\", \"\", \"\" ## $ useAsDefault      <lgl> TRUE, TRUE, TRUE, TRUE, TRUE ## $ description       <chr> \"Generated for hydrofabric\", \"Generated for hydrofab… ## $ owner             <chr> \"\", \"\", \"\", \"\", \"\" ## $ ui                <lgl> NA, NA, NA, NA, NA ## $ update_time       <dttm> 2023-10-12 12:53:35, 2023-10-12 12:53:35, 2023-10-12… a = system.file(\"qml\", \"divides.qml\", package = \"hydrofab\")  readLines(a)[1:20] ##  [1] \"<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>\"                                                                              ##  [2] \"<qgis version=\\\"3.22.6-Białowieża\\\" styleCategories=\\\"Symbology\\\">\"                                                                      ##  [3] \"  <renderer-v2 enableorderby=\\\"0\\\" attr=\\\"type\\\" forceraster=\\\"0\\\" type=\\\"categorizedSymbol\\\" symbollevels=\\\"0\\\" referencescale=\\\"-1\\\">\" ##  [4] \"    <categories>\"                                                                                                                        ##  [5] \"      <category symbol=\\\"0\\\" value=\\\"coastal\\\" label=\\\"coastal\\\" render=\\\"true\\\"/>\"                                                      ##  [6] \"      <category symbol=\\\"1\\\" value=\\\"network\\\" label=\\\"network\\\" render=\\\"true\\\"/>\"                                                      ##  [7] \"      <category symbol=\\\"2\\\" value=\\\"internal\\\" label=\\\"internal\\\" render=\\\"true\\\"/>\"                                                    ##  [8] \"      <category symbol=\\\"4\\\" value=\\\"terminal\\\" label=\\\"terminal\\\" render=\\\"true\\\"/>\"                                                    ##  [9] \"    <\/categories>\"                                                                                                                       ## [10] \"    <symbols>\"                                                                                                                           ## [11] \"      <symbol name=\\\"0\\\" force_rhr=\\\"0\\\" clip_to_extent=\\\"1\\\" alpha=\\\"1\\\" type=\\\"fill\\\">\"                                                ## [12] \"        <data_defined_properties>\"                                                                                                       ## [13] \"          <Option type=\\\"Map\\\">\"                                                                                                         ## [14] \"            <Option name=\\\"name\\\" value=\\\"\\\" type=\\\"QString\\\"/>\"                                                                         ## [15] \"            <Option name=\\\"properties\\\"/>\"                                                                                               ## [16] \"            <Option name=\\\"type\\\" value=\\\"collection\\\" type=\\\"QString\\\"/>\"                                                               ## [17] \"          <\/Option>\"                                                                                                                     ## [18] \"        <\/data_defined_properties>\"                                                                                                      ## [19] \"        <layer locked=\\\"0\\\" class=\\\"SimpleFill\\\" enabled=\\\"1\\\" pass=\\\"0\\\">\"                                                              ## [20] \"          <Option type=\\\"Map\\\">\""},{"path":"/articles/05-subsetting.html","id":"the-conus-network-file","dir":"Articles","previous_headings":"","what":"The CONUS network file","title":"Building your own subset","text":"Remember, reference, refactor, NextGen products distributed VPU. data products segmented, describe holistic network. easy data discoverabilty, cross-walking, indexing, network layers VPU joined single Parquet file (~80MB size) table ’ll see every relationship features current hydrofabric, source hydrofabric, hydrolocations, exploded “many--many” table. example, can look flowpath wb-1002 find defined aggregation NHDPlusV2 COMID 2239831 2239831. , terminal outflow ‘HUC12-010100100101’ occurs tnx-1000000019 fed aggregate flowpath made three source flowpaths (COMID={816563, 816417, 816415})","code":"net = arrow::read_parquet(\"../data/conus_net.parquet\")  glimpse(net) ## Rows: 3,178,347 ## Columns: 16 ## $ id                    <chr> \"wb-282\", \"wb-282\", \"wb-282\", \"wb-282\", \"wb-2462… ## $ toid                  <chr> \"tnx-1000000171\", \"tnx-1000000171\", \"tnx-1000000… ## $ divide_id             <chr> \"cat-282\", \"cat-282\", \"cat-282\", \"cat-282\", \"cat… ## $ ds_id                 <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ mainstem              <int> 2238463, 2238463, 2238463, 2238463, 2243682, 224… ## $ hl_id                 <chr> NA, NA, NA, NA, \"176\", \"176\", \"176\", \"183\", \"183… ## $ hydroseq              <int> 19980, 19980, 19980, 19980, 19979, 19979, 19979,… ## $ hl_uri                <chr> NA, NA, NA, NA, \"HUC12-010100100101\", \"HUC12-010… ## $ hf_source             <chr> \"NHDPlusV2\", \"NHDPlusV2\", \"NHDPlusV2\", \"NHDPlusV… ## $ hf_id                 <dbl> 4287171, 4287061, 4287169, 4287115, 816563, 8164… ## $ lengthkm              <dbl> 3.695258, 3.695258, 3.695258, 3.695258, 5.135779… ## $ areasqkm              <dbl> 6.786451, 6.786451, 6.786451, 6.786451, 13.28626… ## $ tot_drainage_areasqkm <dbl> 6.786451, 6.786451, 6.786451, 6.786451, 51.65776… ## $ type                  <chr> \"terminal\", \"terminal\", \"terminal\", \"terminal\", … ## $ vpu                   <chr> \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", … ## $ hf_hydroseq           <dbl> 150061851, 150030537, 150035911, 150045246, 1500… glimpse(filter(net, id == \"wb-1002\")) ## Rows: 2 ## Columns: 16 ## $ id                    <chr> \"wb-1002\", \"wb-1002\" ## $ toid                  <chr> \"nex-294\", \"nex-294\" ## $ divide_id             <chr> \"cat-1002\", \"cat-1002\" ## $ ds_id                 <dbl> NA, NA ## $ mainstem              <int> 2239831, 2239831 ## $ hl_id                 <chr> NA, NA ## $ hydroseq              <int> 1927, 1927 ## $ hl_uri                <chr> NA, NA ## $ hf_source             <chr> \"NHDPlusV2\", \"NHDPlusV2\" ## $ hf_id                 <dbl> 4290271, 4290437 ## $ lengthkm              <dbl> 6.291308, 6.291308 ## $ areasqkm              <dbl> 23.06835, 23.06835 ## $ tot_drainage_areasqkm <dbl> 54.84601, 54.84601 ## $ type                  <chr> \"nexus\", \"nexus\" ## $ vpu                   <chr> \"01\", \"01\" ## $ hf_hydroseq           <dbl> 150045065, 150035814 glimpse(filter(net, hl_uri == 'HUC12-010100100101')) ## Rows: 3 ## Columns: 16 ## $ id                    <chr> \"wb-2462\", \"wb-2462\", \"wb-2462\" ## $ toid                  <chr> \"tnx-1000000019\", \"tnx-1000000019\", \"tnx-1000000… ## $ divide_id             <chr> \"cat-2462\", \"cat-2462\", \"cat-2462\" ## $ ds_id                 <dbl> NA, NA, NA ## $ mainstem              <int> 2243682, 2243682, 2243682 ## $ hl_id                 <chr> \"176\", \"176\", \"176\" ## $ hydroseq              <int> 19979, 19979, 19979 ## $ hl_uri                <chr> \"HUC12-010100100101\", \"HUC12-010100100101\", \"HUC… ## $ hf_source             <chr> \"NHDPlusV2\", \"NHDPlusV2\", \"NHDPlusV2\" ## $ hf_id                 <dbl> 816563, 816417, 816415 ## $ lengthkm              <dbl> 5.135779, 5.135779, 5.135779 ## $ areasqkm              <dbl> 13.28626, 13.28626, 13.28626 ## $ tot_drainage_areasqkm <dbl> 51.65776, 51.65776, 51.65776 ## $ type                  <chr> \"terminal\", \"terminal\", \"terminal\" ## $ vpu                   <chr> \"01\", \"01\", \"01\" ## $ hf_hydroseq           <dbl> 150027523, 150024646, 150066278"},{"path":[]},{"path":"/articles/05-subsetting.html","id":"speed","dir":"Articles","previous_headings":"The CONUS network file > Why do it this way?","what":"1. Speed","title":"Building your own subset","text":"","code":"system.time({   net = read_parquet('s3://nextgen-hydrofabric/pre-release/conus_net.parquet') })  #    user  system elapsed  #  2.180   2.123  41.288"},{"path":"/articles/05-subsetting.html","id":"defered-evaluation","dir":"Articles","previous_headings":"The CONUS network file > Why do it this way? > 1. Speed","what":"Defered Evaluation","title":"Building your own subset","text":"times want open entire network limited, often, interested small bits data ","code":"system.time({   net = open_dataset('s3://nextgen-hydrofabric/pre-release/conus_net.parquet') %>%      filter(id == \"wb-1002\") %>%      collect() })  #   user  system elapsed  #  2.294   2.588  24.261"},{"path":[]},{"path":"/articles/05-subsetting.html","id":"by-location","dir":"Articles","previous_headings":"The CONUS network file > Why do it this way? > 2. Feature Identification","what":"By location","title":"Building your own subset","text":"","code":"here = AOI::geocode(\"National Water Center, Alabama\", pt = TRUE)    x = dataRetrieval::findNLDI(location = here)  (filter(net, hf_id == x$origin$comid)) ## # A tibble: 1 × 16 ##   id       toid  divide_id ds_id mainstem hl_id hydroseq hl_uri hf_source  hf_id ##   <chr>    <chr> <chr>     <dbl>    <int> <chr>    <int> <chr>  <chr>      <dbl> ## 1 wb-1649… nex-… cat-1649…    NA  1717455 NA        4370 NA     NHDPlusV2 1.58e7 ## # ℹ 6 more variables: lengthkm <dbl>, areasqkm <dbl>, ## #   tot_drainage_areasqkm <dbl>, type <chr>, vpu <chr>, hf_hydroseq <dbl>"},{"path":"/articles/05-subsetting.html","id":"for-a-gage-in-calfornia","dir":"Articles","previous_headings":"The CONUS network file > Why do it this way? > 2. Feature Identification","what":"For a gage in Calfornia","title":"Building your own subset","text":"","code":"hl = filter(net, hl_uri == \"Gages-11123000\")  (slice_max(hl, hf_hydroseq)) ## # A tibble: 1 × 16 ##   id       toid  divide_id ds_id mainstem hl_id hydroseq hl_uri hf_source  hf_id ##   <chr>    <chr> <chr>     <dbl>    <int> <chr>    <int> <chr>  <chr>      <dbl> ## 1 wb-3400… nex-… cat-3400…    NA  1839328 3569     30250 Gages… NHDPlusV2 1.76e7 ## # ℹ 6 more variables: lengthkm <dbl>, areasqkm <dbl>, ## #   tot_drainage_areasqkm <dbl>, type <chr>, vpu <chr>, hf_hydroseq <dbl>"},{"path":"/articles/05-subsetting.html","id":"for-the-huc12-of-atascadero-creek-in-santa-barbara","dir":"Articles","previous_headings":"The CONUS network file > Why do it this way? > 2. Feature Identification","what":"For the HUC12 of Atascadero Creek in Santa Barbara:","title":"Building your own subset","text":"","code":"hl = filter(net, hl_uri == \"HUC12-180600130201\")  (wbd = slice_max(hl, hf_hydroseq)) ## # A tibble: 1 × 16 ##   id       toid  divide_id ds_id mainstem hl_id hydroseq hl_uri hf_source  hf_id ##   <chr>    <chr> <chr>     <dbl>    <int> <chr>    <int> <chr>  <chr>      <dbl> ## 1 wb-3400… nex-… cat-3400…    NA  1841917 2281     16722 HUC12… NHDPlusV2 1.76e7 ## # ℹ 6 more variables: lengthkm <dbl>, areasqkm <dbl>, ## #   tot_drainage_areasqkm <dbl>, type <chr>, vpu <chr>, hf_hydroseq <dbl>"},{"path":"/articles/05-subsetting.html","id":"for-the-dam-on-horsetooth-reservoir","dir":"Articles","previous_headings":"The CONUS network file > Why do it this way? > 2. Feature Identification","what":"For the dam on Horsetooth Reservoir","title":"Building your own subset","text":"","code":"hl = filter(net, hl_uri == \"NID-CO01659-1\")  (wbd = slice_max(hl, hf_hydroseq)) ## # A tibble: 1 × 16 ##   id       toid  divide_id ds_id mainstem hl_id hydroseq hl_uri hf_source  hf_id ##   <chr>    <chr> <chr>     <dbl>    <int> <chr>    <int> <chr>  <chr>      <dbl> ## 1 wb-3314… nex-… cat-3314…    NA  1223227 7253     11610 NID-C… NHDPlusV2 2.90e6 ## # ℹ 6 more variables: lengthkm <dbl>, areasqkm <dbl>, ## #   tot_drainage_areasqkm <dbl>, type <chr>, vpu <chr>, hf_hydroseq <dbl>"},{"path":"/articles/05-subsetting.html","id":"by-known-comid","dir":"Articles","previous_headings":"The CONUS network file > Why do it this way? > 2. Feature Identification","what":"By known COMID","title":"Building your own subset","text":"","code":"filter(net, hf_id == 101) ## # A tibble: 1 × 16 ##   id        toid  divide_id ds_id mainstem hl_id hydroseq hl_uri hf_source hf_id ##   <chr>     <chr> <chr>     <dbl>    <int> <chr>    <int> <chr>  <chr>     <dbl> ## 1 wb-26052… nex-… cat-2605…    NA  2603469 281        120 HUC12… NHDPlusV2   101 ## # ℹ 6 more variables: lengthkm <dbl>, areasqkm <dbl>, ## #   tot_drainage_areasqkm <dbl>, type <chr>, vpu <chr>, hf_hydroseq <dbl>"},{"path":"/articles/05-subsetting.html","id":"topo-sorting","dir":"Articles","previous_headings":"The CONUS network file > Why do it this way?","what":"3. Topo sorting!","title":"Building your own subset","text":"national network provides opportunity rapid network navigation subsetting. structure CONUS network file also facilitates , precautions taken. “many--many” relationship network file allows fast indexing discovery, duplication feature IDs conducive graph based approaches. Seeking just topology network impractical/wrong Thus, NEED make sure operations running network file dealing distinct rows operations want. case hydrosequencing, unique id/toid pairs complete, non duplicated network, can easily sort subset based defined outlet(s)","code":"# Most downstream feature associated with  (wbd = filter(net, hl_uri == \"HUC12-180600130201\") %>%     select(id, toid, hl_uri, vpu, hydroseq) %>%     slice_max(hydroseq, with_ties = TRUE)) ## # A tibble: 8 × 5 ##   id         toid        hl_uri             vpu   hydroseq ##   <chr>      <chr>       <chr>              <chr>    <int> ## 1 wb-3400759 nex-3400758 HUC12-180600130201 18       16731 ## 2 wb-3400759 nex-3400758 HUC12-180600130201 18       16731 ## 3 wb-3400759 nex-3400758 HUC12-180600130201 18       16731 ## 4 wb-3400759 nex-3400758 HUC12-180600130201 18       16731 ## 5 wb-3400759 nex-3400758 HUC12-180600130201 18       16731 ## 6 wb-3400759 nex-3400758 HUC12-180600130201 18       16731 ## 7 wb-3400759 nex-3400758 HUC12-180600130201 18       16731 ## 8 wb-3400759 nex-3400758 HUC12-180600130201 18       16731 (filter(net, vpu == wbd$vpu[1]) %>%    select(id, toid, divide_id)) ## # A tibble: 170,349 × 3 ##    id         toid           divide_id   ##    <chr>      <chr>          <chr>       ##  1 wb-3378885 tnx-1000012409 cat-3378885 ##  2 wb-3378885 tnx-1000012409 cat-3378885 ##  3 wb-3378885 tnx-1000012409 cat-3378885 ##  4 wb-3378885 tnx-1000012409 cat-3378885 ##  5 wb-3378885 tnx-1000012409 cat-3378885 ##  6 wb-3378885 tnx-1000012409 cat-3378885 ##  7 wb-3378885 tnx-1000012409 cat-3378885 ##  8 wb-3378885 tnx-1000012409 cat-3378885 ##  9 wb-3378885 tnx-1000012409 cat-3378885 ## 10 wb-3378885 tnx-1000012409 cat-3378885 ## # ℹ 170,339 more rows (wbd_net = filter(net, vpu == wbd$vpu) %>%    select(id, toid, divide_id) %>%    distinct()) ## Warning: There was 1 warning in `filter()`. ## ℹ In argument: `vpu == wbd$vpu`. ## Caused by warning in `vpu == wbd$vpu`: ## ! longer object length is not a multiple of shorter object length ## # A tibble: 65,280 × 3 ##    id         toid           divide_id   ##    <chr>      <chr>          <chr>       ##  1 wb-3378885 tnx-1000012409 cat-3378885 ##  2 wb-3378890 tnx-1000013027 cat-3378890 ##  3 wb-3378892 tnx-1000012410 cat-3378892 ##  4 wb-3378895 tnx-1000013028 cat-3378895 ##  5 wb-3378974 tnx-1000013029 cat-3378974 ##  6 wb-3380350 tnx-1000012411 cat-3380350 ##  7 wb-3380601 tnx-1000012412 cat-3380601 ##  8 wb-3380616 tnx-1000012414 cat-3380616 ##  9 wb-3380617 tnx-1000013030 cat-3380617 ## 10 wb-3380618 tnx-1000012415 cat-3380618 ## # ℹ 65,270 more rows (get_sorted(wbd_net, outlets = wbd$toid[1])) ## Warning in check_hy_outlets(x, fix = FALSE): Outlets don't follow hydroloom ## convention of 0 or '', not fixing. ## # A tibble: 20 × 3 ##    id          toid        divide_id   ##    <chr>       <chr>       <chr>       ##  1 wb-3400765  nex-3400757 cat-3400765 ##  2 nex-3400757 wb-3400757  NA          ##  3 wb-3400757  nex-3400758 cat-3400757 ##  4 wb-3400769  nex-3400759 cat-3400769 ##  5 nex-3400759 wb-3400759  NA          ##  6 wb-3400759  nex-3400758 cat-3400759 ##  7 wb-3400760  nex-3400761 cat-3400760 ##  8 nex-3400761 wb-3400761  NA          ##  9 wb-3400761  nex-3400758 cat-3400761 ## 10 wb-3400768  nex-3400758 cat-3400768 ## 11 wb-3400766  nex-3400762 cat-3400766 ## 12 nex-3400762 wb-3400762  NA          ## 13 wb-3400762  nex-3400763 cat-3400762 ## 14 wb-3400767  nex-3400764 cat-3400767 ## 15 nex-3400764 wb-3400764  NA          ## 16 wb-3400764  nex-3400763 cat-3400764 ## 17 wb-3400770  nex-3400763 cat-3400770 ## 18 nex-3400763 wb-3400763  NA          ## 19 wb-3400763  nex-3400758 cat-3400763 ## 20 nex-3400758 wb-3400758  NA"},{"path":"/articles/05-subsetting.html","id":"complete-example","dir":"Articles","previous_headings":"The CONUS network file","what":"Complete Example:","title":"Building your own subset","text":"","code":"system.time({   wbd = filter(net, hl_uri == \"HUC12-180600130201\") %>%     select(toid,  vpu, hydroseq) %>%     slice_max(hydroseq, with_ties = FALSE)   wbd_net = filter(net, vpu == wbd$vpu) %>%    select(id, toid, divide_id) %>%      distinct() %>%      get_sorted(outlets = wbd$toid) }) ## Warning in check_hy_outlets(x, fix = FALSE): Outlets don't follow hydroloom ## convention of 0 or '', not fixing. ##    user  system elapsed  ##   0.890   0.137   1.057 (ids = na.omit(unique(unlist(wbd_net)))) ##  [1] \"wb-3400765\"  \"nex-3400757\" \"wb-3400757\"  \"wb-3400769\"  \"nex-3400759\" ##  [6] \"wb-3400759\"  \"wb-3400760\"  \"nex-3400761\" \"wb-3400761\"  \"wb-3400768\"  ## [11] \"wb-3400766\"  \"nex-3400762\" \"wb-3400762\"  \"wb-3400767\"  \"nex-3400764\" ## [16] \"wb-3400764\"  \"wb-3400770\"  \"nex-3400763\" \"wb-3400763\"  \"nex-3400758\" ## [21] \"wb-3400758\"  \"cat-3400765\" \"cat-3400757\" \"cat-3400769\" \"cat-3400759\" ## [26] \"cat-3400760\" \"cat-3400761\" \"cat-3400768\" \"cat-3400766\" \"cat-3400762\" ## [31] \"cat-3400767\" \"cat-3400764\" \"cat-3400770\" \"cat-3400763\" ## attr(,\"na.action\") ## [1] 23 ## attr(,\"class\") ## [1] \"omit\""},{"path":"/articles/05-subsetting.html","id":"easy-integration-with-sql","dir":"Articles","previous_headings":"The CONUS network file > Complete Example:","what":"4. Easy integration with SQL","title":"Building your own subset","text":"set IDs, SQL backing GPKG allows quickly extracting features based ID set","code":"## USE GET HYDROFABRIC HERE (gpkg = get_fabric(VPU = wbd$vpu,  cache_dir = \"cihro-data\")) ## cihro-data/nextgen_18.gpkg db <- dbConnect(SQLite(), gpkg)  t = tbl(db, \"divides\") %>%       filter(if_any(any_of(c('divide_id', 'id', 'ds_id')), ~ . %in% ids)) %>%       collect()  st_as_sf(t, crs = 5070) %>%     mapview()"},{"path":"/articles/05-subsetting.html","id":"subsetting","dir":"Articles","previous_headings":"","what":"Subsetting!","title":"Building your own subset","text":"Now, conceptual straight forward, repetitively annoying. Equally, writing logic layers loop can prone easy errors. cases, provide subset_network function works o n","code":"system.time({   xx = subset_network(id = wbd$toid,                        lyrs = c(\"divides\", \"nexus\", \"flowpaths\", \"lakes\", \"flowpath_attributes\"),                       cache_dir = \"cihro-data\") }) ## Warning: There was 1 warning in `dplyr::filter()`. ## ℹ In argument: `hf_id == comid`. ## Caused by warning in `hf_id == comid`: ## ! longer object length is not a multiple of shorter object length ## Starting from: `wb-3400757` ## Subsetting: divides (1/5) ## Subsetting: nexus (2/5) ## Subsetting: flowpaths (3/5) ## Subsetting: lakes (4/5) ## Subsetting: flowpath_attributes (5/5) ##    user  system elapsed  ##   5.082   1.045  15.140 lapply(xx, names) ## $divides ##  [1] \"fid\"                   \"geom\"                  \"divide_id\"             ##  [4] \"toid\"                  \"type\"                  \"ds_id\"                 ##  [7] \"areasqkm\"              \"id\"                    \"lengthkm\"              ## [10] \"tot_drainage_areasqkm\" \"has_flowline\"          ##  ## $nexus ## [1] \"fid\"    \"geom\"   \"id\"     \"toid\"   \"hl_id\"  \"hl_uri\" \"type\"   ##  ## $flowpaths ##  [1] \"fid\"                   \"geom\"                  \"id\"                    ##  [4] \"toid\"                  \"mainstem\"              \"order\"                 ##  [7] \"hydroseq\"              \"lengthkm\"              \"areasqkm\"              ## [10] \"tot_drainage_areasqkm\" \"has_divide\"            \"divide_id\"             ##  ## $lakes ##  [1] \"fid\"          \"geom\"         \"id\"           \"toid\"         \"hl_id\"        ##  [6] \"hl_reference\" \"hl_link\"      \"hl_uri\"       \"Dam_Length\"   \"ifd\"          ## [11] \"LkArea\"       \"LkMxE\"        \"OrificeA\"     \"OrificeC\"     \"OrificeE\"     ## [16] \"time\"         \"WeirC\"        \"WeirE\"        \"WeirL\"        ##  ## $flowpath_attributes ##  [1] \"fid\"                  \"id\"                   \"rl_gages\"             ##  [4] \"rl_NHDWaterbodyComID\" \"Qi\"                   \"MusK\"                 ##  [7] \"MusX\"                 \"n\"                    \"So\"                   ## [10] \"ChSlp\"                \"BtmWdth\"              \"time\"                 ## [13] \"Kchan\"                \"nCC\"                  \"TopWdthCC\"            ## [16] \"TopWdth\"              \"length_m\""},{"path":"/articles/05-subsetting.html","id":"example-for-poudre-river","dir":"Articles","previous_headings":"","what":"Example for Poudre River!","title":"Building your own subset","text":"","code":"system.time({   xx = subset_network(hl_uri = 'Gages-06752260',                        lyrs = c(\"divides\", \"nexus\", \"flowpaths\"),                       cache_dir = \"cihro-data\",                       outfile = \"cihro-data/poudre-subset.gpkg\") }) ## Starting from: `nex-278699` ## Subsetting: divides (1/3) ## Subsetting: nexus (2/3) ## Subsetting: flowpaths (3/3) ## Deleting layer `layer_styles' using driver `GPKG' ##    user  system elapsed  ##   3.882   1.330  14.254 st_layers(xx) ## Driver: GPKG  ## Available layers: ##     layer_name     geometry_type features fields             crs_name ## 1      divides     Multi Polygon      419      9 NAD83 / Conus Albers ## 2        nexus             Point      171      5 NAD83 / Conus Albers ## 3    flowpaths Multi Line String      419     10 NAD83 / Conus Albers ## 4 layer_styles                NA        3     12                 <NA>"},{"path":[]},{"path":"/articles/05-subsetting.html","id":"cli-option","dir":"Articles","previous_headings":"","what":"CLI Option","title":"Building your own subset","text":"interested using NOAA NextGen fabric , provided Go-based CLI utility following syntax:","code":"hfsubset - Hydrofabric Subsetter  Usage:   hfsubset [OPTIONS] identifiers...   hfsubset (-h | --help)  Example:   hfsubset -l divides -o ./poudre-divides.gpkg -r \"pre-release\" -t hl \"Gages-06752260\"   hfsubset -o ./poudre-all.gpkg -t hl \"Gages-06752260\"  Options:   -l string         Layers to subset (default \"divides,nexus,flowpaths,network,hydrolocations\")   -o string         Output file name (default \"hydrofabric.gpkg\")   -r string         Hydrofabric version (default \"pre-release\")   -t string         One of: hf, hl, or comid (default \"hf\")"},{"path":"/articles/05-subsetting.html","id":"nextgen-needs-geojson-final-example","dir":"Articles","previous_headings":"CLI Option","what":"NextGen Needs GeoJSON: Final example","title":"Building your own subset","text":"GPKG support end goal NextGen, current requires GeoJSON CSV inputs. Fortunately, ogr2ogr provides easy ways extract sub layer/formats GPKG file. full-stop example extracting subset hydrolocation, using CLI, generating needed files NextGen","code":"cd <WHEREVER YOU WANT!> mkdir poudre cd poudre  hfsubset -l divides,nexus,flowpath_attributes -o ./poudre-subset.gpkg -r \"pre-release\" -t hl \"Gages-06752260\"  ogr2ogr -f GeoJSON flowpath.geojson poudre-subset.gpkg flowpath  ogr2ogr -f GeoJSON catchments.geojson poudre-subset.gpkg divides   ogr2ogr -f GeoJSON nexus.geojson poudre-subset.gpkg nexus ogr2ogr -f CSV flowpath_attributes.csv poudre-subset.gpkg flowpath_attributes  ls poudre"},{"path":"/articles/06-attribute-access.html","id":"precomputed-data","dir":"Articles","previous_headings":"","what":"1. Precomputed Data","title":"Attribute Access and Creation","text":"intention NextGen provide suite precomputed, useful information related release hydrofabric. date include attributes needed run CFE/NOAH-OWP, eventually include attributes found CAMELS dataset. Precomputed data live directory released hydrofabric artifacts follow VPU segmentation. , can see extract information CFE Poudre subset.","code":""},{"path":"/articles/06-attribute-access.html","id":"set-up","dir":"Articles","previous_headings":"1. Precomputed Data","what":"Set up","title":"Attribute Access and Creation","text":"","code":"library(arrow)  # read network x = read_sf(\"cihro-data/poudre.gpkg\", \"network\")  # define variable set attr = 'cfe_noahowp'  # define path  p = glue(\"s3://lynker-spatial/pre-release/nextgen_{x$vpu[1]}_{attr}.parquet\")"},{"path":"/articles/06-attribute-access.html","id":"access-and-join","dir":"Articles","previous_headings":"1. Precomputed Data","what":"Access and Join","title":"Attribute Access and Creation","text":"","code":"divides = read_sf(\"cihro-data/poudre.gpkg\", \"divides\")  # Open dataset and Join to divides divides = open_dataset(p) %>%    filter(divide_id %in% divides$divide_id) %>%    collect() %>%    right_join(divides, by = \"divide_id\") %>%    st_as_sf()"},{"path":"/articles/06-attribute-access.html","id":"explore","dir":"Articles","previous_headings":"","what":"Explore","title":"Attribute Access and Creation","text":"","code":"glimpse(divides) ## Rows: 419 ## Columns: 45 ## $ divide_id                   <chr> \"cat-278672\", \"cat-278673\", \"cat-278674\", … ## $ gw_Coeff                    <dbl> 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, … ## $ gw_Zmax                     <dbl> 247.42465, 247.42465, 247.42465, 247.42465… ## $ gw_Expon                    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ `bexp_soil_layers_stag=1`   <dbl> 6.905784, 6.905784, 6.905784, 6.905784, 6.… ## $ `bexp_soil_layers_stag=2`   <dbl> 6.905784, 6.905784, 6.905784, 6.905784, 6.… ## $ `bexp_soil_layers_stag=3`   <dbl> 6.905784, 6.905784, 6.905784, 6.905784, 6.… ## $ `bexp_soil_layers_stag=4`   <dbl> 6.905784, 6.905784, 6.905784, 6.905784, 6.… ## $ ISLTYP                      <int> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, … ## $ IVGTYP                      <int> 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14… ## $ `dksat_soil_layers_stag=1`  <dbl> 1.605749e-07, 1.560944e-07, 2.424650e-07, … ## $ `dksat_soil_layers_stag=2`  <dbl> 1.605749e-07, 1.560944e-07, 2.424650e-07, … ## $ `dksat_soil_layers_stag=3`  <dbl> 1.605749e-07, 1.560944e-07, 2.424650e-07, … ## $ `dksat_soil_layers_stag=4`  <dbl> 1.605749e-07, 1.560944e-07, 2.424650e-07, … ## $ `psisat_soil_layers_stag=1` <dbl> 0.09665685, 0.11262189, 0.16652204, 0.0334… ## $ `psisat_soil_layers_stag=2` <dbl> 0.09665685, 0.11262189, 0.16652204, 0.0334… ## $ `psisat_soil_layers_stag=3` <dbl> 0.09665685, 0.11262189, 0.16652204, 0.0334… ## $ `psisat_soil_layers_stag=4` <dbl> 0.09665685, 0.11262189, 0.16652204, 0.0334… ## $ cwpvt                       <dbl> 0.09246867, 0.09224170, 0.09224170, 0.0922… ## $ mfsno                       <dbl> 3.268730, 3.307741, 3.307741, 3.307741, 3.… ## $ mp                          <dbl> 9.505003, 8.412661, 8.366073, 8.368729, 8.… ## $ `quartz_soil_layers_stag=1` <dbl> 0.6000000, 0.6000000, 0.6000000, 0.6000000… ## $ `quartz_soil_layers_stag=2` <dbl> 0.6000000, 0.6000000, 0.6000000, 0.6000000… ## $ `quartz_soil_layers_stag=3` <dbl> 0.6000000, 0.6000000, 0.6000000, 0.6000000… ## $ `quartz_soil_layers_stag=4` <dbl> 0.6000000, 0.6000000, 0.6000000, 0.6000000… ## $ refkdt                      <dbl> 3.936352, 3.951302, 3.951302, 3.951302, 3.… ## $ slope                       <dbl> 0.7555849542, 0.7692162991, 0.7692162991, … ## $ `smcmax_soil_layers_stag=1` <dbl> 0.4457698, 0.4462140, 0.4462140, 0.4462140… ## $ `smcmax_soil_layers_stag=2` <dbl> 0.4457698, 0.4462140, 0.4462140, 0.4462140… ## $ `smcmax_soil_layers_stag=3` <dbl> 0.4457698, 0.4462140, 0.4462140, 0.4462140… ## $ `smcmax_soil_layers_stag=4` <dbl> 0.4457698, 0.4462140, 0.4462140, 0.4462140… ## $ `smcwlt_soil_layers_stag=1` <dbl> 0.04700000, 0.04700000, 0.04700000, 0.0470… ## $ `smcwlt_soil_layers_stag=2` <dbl> 0.04700000, 0.04700000, 0.04700000, 0.0470… ## $ `smcwlt_soil_layers_stag=3` <dbl> 0.04700000, 0.04700000, 0.04700000, 0.0470… ## $ `smcwlt_soil_layers_stag=4` <dbl> 0.04700000, 0.04700000, 0.04700000, 0.0470… ## $ vcmx25                      <dbl> 65.49842, 69.17342, 69.32784, 69.31904, 69… ## $ toid                        <chr> \"nex-278673\", \"nex-278674\", \"nex-278675\", … ## $ type                        <chr> \"network\", \"network\", \"network\", \"network\"… ## $ ds_id                       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ areasqkm                    <dbl> 20.081244, 13.325397, 1.141646, 7.440300, … ## $ id                          <chr> \"wb-278672\", \"wb-278673\", \"wb-278674\", \"wb… ## $ lengthkm                    <dbl> 9.249722, 5.541113, 1.122110, 6.340693, 5.… ## $ tot_drainage_areasqkm       <dbl> 20.08124, 51.43679, 87.73334, 186.33094, 2… ## $ has_flowline                <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ geom                        <MULTIPOLYGON [m]> MULTIPOLYGON (((-823365 197..…"},{"path":"/articles/06-attribute-access.html","id":"unique-use-cases","dir":"Articles","previous_headings":"","what":"2. Unique Use Cases","title":"Attribute Access and Creation","text":"Now, may want use (limited) data defined. ok ! part enterprise hydrofabric utilities/aspirations, provide tools access 100,000 different datasets without requiring download find data!","code":""},{"path":[]},{"path":"/articles/06-attribute-access.html","id":"single-day","dir":"Articles","previous_headings":"2. Unique Use Cases > Gridmet solar radiation on 2020-10-29","what":"Single Day","title":"Attribute Access and Creation","text":"","code":"r = getGridMET(AOI = divides, varname = \"srad\", startDate = \"2020-10-29\")  plot(r$daily_mean_shortwave_radiation_at_surface) srad = execute_zonal(r, geom = divides, fun = \"mean\", ID = \"divide_id\")  plot(srad['mean.srad_2020.10.29'])"},{"path":"/articles/06-attribute-access.html","id":"through-time","dir":"Articles","previous_headings":"2. Unique Use Cases > Gridmet solar radiation on 2020-10-29","what":"Through time","title":"Attribute Access and Creation","text":"","code":"p = getGridMET(AOI = divides, varname = \"pr\", startDate = \"2023-05-10\", endDate = \"2023-05-13\")  plot(p$precipitation_amount) pr = execute_zonal(p, geom = divides, fun = \"mean\", ID = \"divide_id\")  plot(pr[grep('pr', names(pr), value = TRUE)], border = FALSE)"},{"path":"/articles/06-attribute-access.html","id":"on-the-fly-exploration","dir":"Articles","previous_headings":"2. Unique Use Cases > Gridmet solar radiation on 2020-10-29","what":"On the fly exploration","title":"Attribute Access and Creation","text":"want rank map NextGen Catchments amount rain received last days","code":"pr$cumpr = rank(st_drop_geometry(pr[grep('pr', names(pr), value = TRUE)]) %>% rowSums())  plot(pr['cumpr'])"},{"path":"/articles/06-attribute-access.html","id":"beyond-gridmet","dir":"Articles","previous_headings":"2. Unique Use Cases > Gridmet solar radiation on 2020-10-29","what":"Beyond Gridmet","title":"Attribute Access and Creation","text":"climateR provides range short cut functions common datasets. simply shortcuts make access faster:","code":"grep(\"get\", ls(\"package:climateR\"), value = TRUE) ##  [1] \"dap_get\"             \"get_data\"            \"get3DEP\"             ##  [4] \"getBCCA\"             \"getCHIRPS\"           \"getDaymet\"           ##  [7] \"getDodsrcPath\"       \"getGLDAS\"            \"getGridMET\"          ## [10] \"getLCMAP\"            \"getLivneh\"           \"getLivneh_fluxes\"    ## [13] \"getLOCA\"             \"getLOCA_hydro\"       \"getMACA\"             ## [16] \"getMODIS\"            \"getNASADEM\"          \"getNetrcPath\"        ## [19] \"getNLCD\"             \"getNLDAS\"            \"getPRISM\"            ## [22] \"getTerraClim\"        \"getTerraClimNormals\" \"getVIC\"              ## [25] \"getWorldClim\"        \"go_get_dap_data\"     \"vrt_crop_get\""},{"path":"/articles/06-attribute-access.html","id":"mean-monthly-normals","dir":"Articles","previous_headings":"2. Unique Use Cases > Gridmet solar radiation on 2020-10-29 > Beyond Gridmet","what":"Mean Monthly Normals","title":"Attribute Access and Creation","text":"","code":"ppt = getTerraClimNormals(AOI = divides,  varname = \"ppt\") %>%    execute_zonal(geom = divides, ID = \"divide_id\")  plot(ppt[grep(\"ppt\", names(ppt), value = TRUE)], border = NA) ## Warning: plotting the first 10 out of 12 attributes; use max.plot = 12 to plot ## all"},{"path":"/articles/06-attribute-access.html","id":"beyond-shortcut-functions","dir":"Articles","previous_headings":"2. Unique Use Cases > Gridmet solar radiation on 2020-10-29","what":"Beyond shortcut functions","title":"Attribute Access and Creation","text":"climateR-catalogs provide vast catalog resources can accessed. can find catalog element want, can passed general dap utilities.","code":"glimpse(read_live_catalog()) ## Rows: 37,010 ## Columns: 29 ## $ id          <fct> bcca, bcca, bcca, bcca, bcca, bcca, bcca, bcca, bcca, bcca… ## $ asset       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ URL         <chr> \"https://cida.usgs.gov/thredds/dodsC/cmip5_bcca/future\", \"… ## $ type        <fct> opendap, opendap, opendap, opendap, opendap, opendap, open… ## $ varname     <chr> \"BCCA_0-125deg_pr_day_ACCESS1-0_rcp45_r1i1p1\", \"BCCA_0-125… ## $ variable    <fct> pr, pr, pr, pr, pr, pr, pr, pr, pr, pr, pr, pr, pr, pr, pr… ## $ description <chr> \"Precipitation\", \"Precipitation\", \"Precipitation\", \"Precip… ## $ units       <chr> \"mm/d\", \"mm/d\", \"mm/d\", \"mm/d\", \"mm/d\", \"mm/d\", \"mm/d\", \"m… ## $ model       <chr> \"ACCESS1-0\", \"ACCESS1-0\", \"bcc-csm1-1\", \"bcc-csm1-1\", \"bcc… ## $ ensemble    <chr> \"r1i1p1\", \"r1i1p1\", \"r1i1p1\", \"r1i1p1\", \"r1i1p1\", \"r1i1p1\"… ## $ scenario    <chr> \"rcp45\", \"rcp85\", \"rcp26\", \"rcp45\", \"rcp60\", \"rcp85\", \"rcp… ## $ T_name      <chr> \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"t… ## $ duration    <chr> \"2006-01-01 12:00:00/2100-12-31 12:00:00\", \"2006-01-01 12:… ## $ interval    <chr> \"1 days\", \"1 days\", \"1 days\", \"1 days\", \"1 days\", \"1 days\"… ## $ nT          <int> 34698, 34698, 34698, 34698, 34698, 34698, 34698, 34698, 34… ## $ X_name      <chr> \"longitude\", \"longitude\", \"longitude\", \"longitude\", \"longi… ## $ Y_name      <chr> \"latitude\", \"latitude\", \"latitude\", \"latitude\", \"latitude\"… ## $ X1          <dbl> -124.6875, -124.6875, -124.6875, -124.6875, -124.6875, -12… ## $ Xn          <dbl> -67.0625, -67.0625, -67.0625, -67.0625, -67.0625, -67.0625… ## $ Y1          <dbl> 25.1875, 25.1875, 25.1875, 25.1875, 25.1875, 25.1875, 25.1… ## $ Yn          <dbl> 52.8125, 52.8125, 52.8125, 52.8125, 52.8125, 52.8125, 52.8… ## $ resX        <dbl> 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.… ## $ resY        <dbl> 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.… ## $ ncols       <int> 462, 462, 462, 462, 462, 462, 462, 462, 462, 462, 462, 462… ## $ nrows       <int> 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222… ## $ crs         <chr> \"+proj=longlat +a=6378137 +f=0.00335281066474748 +pm=0 +no… ## $ toptobottom <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… ## $ tiled       <fct> T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T… ## $ dim_order   <fct> TYX, TYX, TYX, TYX, TYX, TYX, TYX, TYX, TYX, TYX, TYX, TYX…"},{"path":"/articles/06-attribute-access.html","id":"polaris-soils","dir":"Articles","previous_headings":"2. Unique Use Cases > Gridmet solar radiation on 2020-10-29","what":"POLARIS Soils","title":"Attribute Access and Creation","text":"","code":"cat = filter(catalog, id == \"polaris\", grepl(\"mean alpha\", variable))  alpha = dap(catalog = cat, AOI = divides) names(alpha) = paste0(\"layer\", 1:nlyr(alpha))  plot(alpha) soil = execute_zonal(alpha, geom = divides, fun = \"mean\", ID = \"divide_id\")  plot(soil[grepl('mean.layer', names(soil))], border = NA)"},{"path":"/articles/06-attribute-access.html","id":"usgs-dems","dir":"Articles","previous_headings":"2. Unique Use Cases > Gridmet solar radiation on 2020-10-29","what":"USGS DEMs","title":"Attribute Access and Creation","text":"","code":"(cat = catalog %>%  filter(asset == \"30m CONUS DEM\")) ## # A tibble: 1 × 29 ##   id        asset  URL   type  varname variable description units model ensemble ##   <fct>     <chr>  <chr> <fct> <chr>   <fct>    <chr>       <chr> <chr> <chr>    ## 1 USGS 3DEP 30m C… /vsi… vrt   elevat… elevati… 30m CONUS … mete… NA    NA       ## # ℹ 19 more variables: scenario <chr>, T_name <chr>, duration <chr>, ## #   interval <chr>, nT <int>, X_name <chr>, Y_name <chr>, X1 <dbl>, Xn <dbl>, ## #   Y1 <dbl>, Yn <dbl>, resX <dbl>, resY <dbl>, ncols <int>, nrows <int>, ## #   crs <chr>, toptobottom <lgl>, tiled <fct>, dim_order <fct> dem = dap(catalog = cat, AOI = divides)  plot(dem[[1]])"},{"path":"/articles/06-attribute-access.html","id":"beyond-r","dir":"Articles","previous_headings":"2. Unique Use Cases > Gridmet solar radiation on 2020-10-29","what":"Beyond R","title":"Attribute Access and Creation","text":"USGS gdptools provides similar climateR/zonal capabilities data catalog Python","code":""},{"path":"/articles/06-attribute-access.html","id":"legacy-of-usgs-based-comid-data","dir":"Articles","previous_headings":"","what":"3. Legacy of USGS based COMID data","title":"Attribute Access and Creation","text":"wide range legacy new products produced USGS rigorously summarize 1,000’s attributes NHDPlusV2 catchment network. One particular interest NextGen TWI. TOPMODEL requires distribution, quick dirty way get NextGen catchment TWI estimates immense value.","code":"knitr::include_graphics(\"../man/figures/usgs-twi.png\")"},{"path":"/articles/06-attribute-access.html","id":"twi-joined-to-the-poudre-river-network","dir":"Articles","previous_headings":"3. Legacy of USGS based COMID data","what":"TWI joined to the Poudre River Network","title":"Attribute Access and Creation","text":"","code":"net = read_sf(\"cihro-data/poudre.gpkg\", \"network\")   twi = data.frame(comid = unique(net$hf_id)) %>%    left_join(get_vaa('areasqkm'), by = \"comid\") %>%    left_join(read_parquet('cihro-data/56f97be4e4b0a6037df06b70_tot.parquet'), by = c(\"comid\"=\"COMID\")) %>%    select(hf_id = comid, s_areasqkm = areasqkm, TOT_TWI)"},{"path":"/articles/06-attribute-access.html","id":"reference-fabric-data","dir":"Articles","previous_headings":"3. Legacy of USGS based COMID data","what":"Reference fabric data","title":"Attribute Access and Creation","text":"","code":"ref = get_fabric(VPU = \"10L\", base_s3 = 's3://lynker-spatial/01_reference/', cache_dir  = \"cihro-data\") %>%    read_sf(\"reference_catchment\") %>%    filter(FEATUREID %in% twi$hf_id) %>%    left_join(twi, by = c(\"FEATUREID\"=\"hf_id\"))  plot(ref['TOT_TWI'], border = NA, main = paste(nrow(ref), \" reference catchments\"))"},{"path":"/articles/06-attribute-access.html","id":"area-averaging-reference-fabric-to-nextgen","dir":"Articles","previous_headings":"3. Legacy of USGS based COMID data","what":"Area averaging reference fabric to NextGen","title":"Attribute Access and Creation","text":"limited just TWI. nhdplusTools package provides archive NHDPlusV2 based catchment datasets can used: Lynker provides reformatted archive EPA streamcat data:","code":"full = net %>%    select(divide_id, hf_id, areasqkm) %>%    distinct() %>%    left_join(twi, by = \"hf_id\")   f1 = aggregate_zones(data = full,                       geom = NULL,                        crosswalk = select(full, hf_id, divide_id, areasqkm, s_areasqkm),                      ID = \"divide_id\") %>%    right_join(divides,               by = \"divide_id\") %>%    st_as_sf()   plot(f1['TOT_TWI'], border = NA, main = paste(nrow(f1), \"nextgen catchments\")) xx = discover_nldi_characteristics(\"all\")   lapply(xx, nrow) ## $local ## [1] 126 ##  ## $total ## [1] 127 ##  ## $divergence_routed ## [1] 126 xx$total$characteristic_id[1:10] ##  [1] \"TOT_BFI\"        \"TOT_PET\"        \"TOT_CONTACT\"    \"TOT_EWT\"        ##  [5] \"TOT_IEOF\"       \"TOT_RECHG\"      \"TOT_SATOF\"      \"TOT_TWI\"        ##  [9] \"TOT_WB5100_ANN\" \"TOT_FUNGICIDE\" xx = aws.s3::get_bucket_df(bucket = 's3://nextgen-hydrofabric', prefix = 'streamcats') %>%    filter(!grepl(\"old|data\", Key))  nrow(xx) ## [1] 139 xx$Key[2:11] ##  [1] \"streamcats/streamcat_AgriculturalNitrogen_cat.parquet\"    ##  [2] \"streamcats/streamcat_Aquifers_cat.parquet\"                ##  [3] \"streamcats/streamcat_BFI_cat.parquet\"                     ##  [4] \"streamcats/streamcat_CanalDensity_cat.parquet\"            ##  [5] \"streamcats/streamcat_CoalMines_cat.parquet\"               ##  [6] \"streamcats/streamcat_Dams_cat.parquet\"                    ##  [7] \"streamcats/streamcat_EPA_FRSRipBuf100_cat.parquet\"        ##  [8] \"streamcats/streamcat_EPA_FRS_cat.parquet\"                 ##  [9] \"streamcats/streamcat_Elevation_cat.parquet\"               ## [10] \"streamcats/streamcat_FirePerimetersRipBuf100_cat.parquet\""},{"path":"/articles/06-attribute-access.html","id":"summary","dir":"Articles","previous_headings":"3. Legacy of USGS based COMID data","what":"Summary","title":"Attribute Access and Creation","text":"NOAA-OWP/hydrofabric provides network subsetting function preloads number software tools critical enterprise effort reference fabric built NHDPlusV2 allows minimal, improved network can manipulate refactoring aggregation meet needs variety modeling tasks NHDPlusV2 current, just possible reference, however, NHDPlusV2 legacy data Web infrastructure available. NextGen data fabrics one form refactored/aggregated network extensions modeling application. “just” want use data created, Go based API (runs hydrofab::subset_network) available want make , tools available open also provide tools start enhancing data fabrics information helps guide scientific choices, model options, understanding","code":""},{"path":"/articles/07-channel-geometry.html","id":"a-ml-approach-to-estimate-channel-geometry","dir":"Articles","previous_headings":"","what":"A ML approach to estimate channel geometry","title":"Channel FHG - Machine Learning Model","text":"Check website provides details approach.","code":""},{"path":"/articles/07-channel-geometry.html","id":"what-is-fhg","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry","what":"What is FHG?","title":"Channel FHG - Machine Learning Model","text":"feature hydraulic geometry (FHG) extension work Leopold Maddock, 1953 apply learned hydraulic geometry relations locations holistic hydrologic feature. hydraulic geometry relations suggest measured hydraulic characteristics channel cross-section including width, depth, velocity vary discharge simple power-law function. relations present opportunity develop time-varying representation channel depth width turn, can determine shape channel.","code":""},{"path":"/articles/07-channel-geometry.html","id":"why-build-a-machine-learning-model","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry","what":"Why build a machine learning model?","title":"Channel FHG - Machine Learning Model","text":"Currently, Digital Elevation Model’s (DEM) can used extract floodplain topology DEMs penetrate deep water thus missing bathymetry bankfull bankfull conditions. missing bathymetry can modeling efforts accounting missing volume. hydraulic geometry method offers solution capture missing bathymetry resolve issue. Deriving hydraulic geometry relations possible measurements width, depth, velocity different discharge values selected USGS sites locations frequent measurements Acoustic Doppler Current Profiler (ADCP). great source dataset USGS HYDRoacoustic dataset support Surface Water Oceanographic Topography satellite mission HYDRoSWOT. limits applicability approach sites measurements taken place. Office Water Prediction (OWP), hand, mission provide 3D channel geometry dataset support Next Gen Water Modeling Framework Flood Inundation Mapping (FIM). requires 3D representation channel shape field measurements (.e., Lidar, HEC-RAS models, etc.) measurement Reaches across CONUS. Therefore, learn hydraulic geometry sites data available (HYDRoSWOT) using machine learning apply locations data. ML model able predict width, depth, velocity well simplified representation channel shape help reproduce missing bathymetry data data available.","code":""},{"path":[]},{"path":"/articles/07-channel-geometry.html","id":"cloning","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry > Repository","what":"Cloning","title":"Channel FHG - Machine Learning Model","text":"","code":"git clone https://github.com/LynkerIntel/conus-fhg.git"},{"path":"/articles/07-channel-geometry.html","id":"example","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry > Repository","what":"Example","title":"Channel FHG - Machine Learning Model","text":"can run model using following com../mand: : -c name running script generated folder outputs. name. -n number cores used parallel. integer depends number cores. Use -1 utilizing -x apply transformation predictor variables. Options True False -y apply transformation predicted variables. Options True False -r coefficient determination used filter bad measurements ADCP data. Ranges 0.0-1.0","code":"./run_ml.bash -c mymodel -n -1 -x False -y False -r 0.8"},{"path":"/articles/07-channel-geometry.html","id":"overview","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry","what":"Overview","title":"Channel FHG - Machine Learning Model","text":"use USGS “HYDRoacoustic dataset support Surface Water Oceanographic Topography satellite” mission (HYDRoSWOT) : Build time-varying model -channel geometry represents width, depth channel given discharge value. can achieved modeling fitted feature hydraulic geometry (FHG) using climate, catchment, surface, subsurface characteristics. relations can described : TW = \\(. Q ^{b}\\) Y = \\(c . Q ^{f}\\) V = \\(k . Q ^{m}\\) Johnson et al, 2023 provided robust framework get best fits equations maintaining continuity relation. use fitted parameters study build ML model. representation curvature -channel shape DEM penetrate see channel bathymetry. can done using FHG coefficients namely f b related channel depth width relation discharge. According Ding../man (2007), given bankfull maximum depth Ym bankfull width W∗ known, channel cross-sections symmetrical, form can approximated Z = \\(Y_{m} ^{*} . \\big( \\frac{2}{W*} \\big) ^{r} . x^{r}, \\;\\;\\; 0 \\leq x \\leq \\frac{W*}{2}\\) z height bed lowest channel elevation (assumed occur channel center), x horizontal distance center. triangle represented r = 1, “Lane Type B stable channel” r ≈ 1.75, parabola r = 2, forms increasingly flatter bottoms steeper banks increasing values r; limit r → ∞, channel rectangular. Values r < 1 characterize “convex” cross-sections.","code":""},{"path":"/articles/07-channel-geometry.html","id":"input-data","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry","what":"Input data","title":"Channel FHG - Machine Learning Model","text":"ML model establishes relation different attributes aggregated catchment local area FHG confidences namely , b, c, f, k, m. include 1- reference fabric data - streamorde –> Modified Strahler stream order - arbolatesu –> Arbolate sum, sum lengths digitized flowlines upstream downstream end immediate flowline, kilometers - roughness –> ../manning’s roughness - etc. 2- Soil data - clay_mean_0_5 –> % clay - ksat_mean_0_5 –> effective saturated hydraulic conductivity, (cm hr-1) - theta_s_mean_0_5 –> saturated soil water content, (cm3 cm-3) - etc. 3- DEM - elevation –> elevation (m) - slope –> slope - US NED Physiographic Diversity - etc. 4- StreamCat dataset - Base flow index - NLCD - Road density - etc. 5- Land surface features - Leaf area index - Soil moisture - NDVI - etc. 6- Climate data - Precipitation - Evaporation - Temperature - etc. 7- NWM simulations - NWM 2.1 quartiles - NWM 2.1 flood frequencies codes data preprocessing cleaning reside data_processing floder. Codes extracting data reside data_retrieval floder R folder. original cleaned data ML modeling data folder training data ML model Processed_merged_fhg.parquet data validation testing Processed_adcp.parquet.","code":""},{"path":[]},{"path":"/articles/07-channel-geometry.html","id":"reducing-feature-space","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry > ML model","what":"Reducing feature space","title":"Channel FHG - Machine Learning Model","text":"step consists reducing large feature space ~400 variables 60 features. done multiple ways: 1- model trained using features dropping sigle least important feature loop retraining model reach peak model accuracy training. 2- remaining grouped meaningful clusters fed AutoEncoder model lower dimention data lunch autoencoder model navigate directory use com../mand begin autoencoding generating new features","code":"cd auto_encoder ./run_ae.bash"},{"path":"/articles/07-channel-geometry.html","id":"preventing-overfit","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry > ML model","what":"Preventing overfit","title":"Channel FHG - Machine Learning Model","text":"done multiple steps: 1- Splitting training train validation early stopping model improvements validation accuracy. 2- Performing k-fold cross validation 3- Initial bag model evaluation form list 50 different ML models selecting top 10 models hyperparameter tunning 4- Ensamble learning including meta voting models 5- deep learning models also include dropout rates prevent overfitting","code":""},{"path":"/articles/07-channel-geometry.html","id":"ensemble-learning","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry > ML model","what":"Ensemble learning","title":"Channel FHG - Machine Learning Model","text":"first stage box evaluation different models. models hyper parameters set default tuned evaluation means finding robust algorithms problem. output 3 different models namely, 1- best model top model among hyperparameter tuned chosen 8 ML models coming bag model evaluation 2- voting ensemble model build top chosen 8 ML models 3- meta learner model build top chosen 8 ML models","code":""},{"path":"/articles/07-channel-geometry.html","id":"results","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry","what":"Results","title":"Channel FHG - Machine Learning Model","text":"compare model results ADCP measurements using multiple goodness--fit criteria.","code":""},{"path":"/articles/07-channel-geometry.html","id":"feature-importance","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry > Results","what":"Feature importance","title":"Channel FHG - Machine Learning Model","text":"use tree algorithm based game theory determine XGBoost feature importance’s. also allows us look inner interactions variables. example low values long term averaged soil moister associate arid semi-arid regions see lot variability stream flow therefore high rate change river width.","code":""},{"path":"/articles/07-channel-geometry.html","id":"evaluation","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry > Results","what":"Evaluation","title":"Channel FHG - Machine Learning Model","text":"can look different metrics including Normalized Nash-Sutcliffe efficiency (NNSE) check model performs terms predicting river velocity, depth, width different discharge measurements. image shows NNSE values station 50 measurements discharge-depth estimating depth(ft) using parameter f form FHG relations. can also look model parameter f perfor../mance predicting max flow: see error associated larger rivers model seen enough training due limited availbility HYDRoSWOT.","code":""},{"path":"/articles/07-channel-geometry.html","id":"channel-shape","dir":"Articles","previous_headings":"A ML approach to estimate channel geometry","what":"Channel Shape","title":"Channel FHG - Machine Learning Model","text":"Using parameters b f can derive r coefficient describes curvature channel looks like figure CONUS.","code":""},{"path":"/articles/08-nextgen-views.html","id":"tldr","dir":"Articles","previous_headings":"","what":"TL;DR","title":"Realizations and Views","text":"realization -> identification concepts view -> representation operations","code":""},{"path":"/articles/08-nextgen-views.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"Realizations and Views","text":"NextGen Hydrofabric Data Model aims support multi-realization view river network landscape using concepts outlined OGC HY Features Standard. data model proposing, enforcing, aimed allow flexible realizations minimal data /O. Defining principle realization, Storing multiple layers data self contained data format. Using opaque identifiers reference realizations hydrologic unit across layers NOTE: layers GPKG realizations hydrologic landscape. Ultimetly one principle realization defines principle unit (e.g. flowpath) hydrologic landscape per model application targeted. Moreover, one viewed realization - - one operated . .concpets definition view - outside HY Features spec - needed applying concrete representations abstract conceptual features. Fundamentally, way world digitally represented dictates types operations, inquires, analysis can done aligning aims analysis, view abstract hydrologic feature, critical efficiency.","code":""},{"path":"/articles/08-nextgen-views.html","id":"nextgen","dir":"Articles","previous_headings":"Intro","what":"NextGen","title":"Realizations and Views","text":"notion HY Feature ready hydrofabric requires ability access number realizations. distinct reference fabric intended support creation data products serve range modeling applications. current state, NextGen requires realizations model execution. currently includes, likely limited , following: , show hydrofabric data model supports tasks clear examples include derivation process. , show divides view comprehensive enough support tasks.","code":""},{"path":"/articles/08-nextgen-views.html","id":"background","dir":"Articles","previous_headings":"Intro","what":"Background","title":"Realizations and Views","text":"NextGen uses flowpath –> nexus topology. requirement aggregating divide complex desired spatial scale avoiding many:1 flowline divide relation. NOTE: possible upcoming work GID FIM, may relax constraint building flowline layer allow many:1 relationship higher resolution flowline network. step might also allow fp –> fp topology consistent core t-route. time, water flows flowpath nexus, one flowpath may contribute one nexus. need store many representations hydrologic landscape, spatial aspatial database challenge. spatial community, well established way store spatial aspatial data layers (tables) single database OGC GeoPackage Format. format provides standard spatial information top SQLite databases. hydrofabric identifiers prefixed make human-readable, parsed within code infer something . exception , may used quickly identify principle realization. R based libraries used example. Python language equivalents.","code":"library(sf)      # spatial data access and manipulation library(mapview) # interactive map creation library(arrow)   # parquet read/write library(dplyr)   # SQL syntax on data.frames  #> Some (R -> Python) equivalents for these packages are: #> - sf      -> geopandas/shapely/Fiona #> - map view -> folio #> - arrow   -> pyarrow #> - dplyr   -> pandas/polar"},{"path":"/articles/08-nextgen-views.html","id":"nextgen-principle-realization","dir":"Articles","previous_headings":"Intro","what":"NextGen Principle Realization","title":"Realizations and Views","text":"Due routing requirements NextGen (Task #3), connectivity flowpath network principle realization landscape thus primary realization hydrologic units. , flowpath identification given theid identifier. Anywhere id found HF Geo Package, reference principle realization - flowpaths. flexibility HY Features standard, implemented data model make possible consider hydrofabric different perspectives, one viewed realization operated . viewed realization essence application based abstraction principle realization. Selecting viewed realization must consider fundamental operations needed - just principle use case. example, flowpath realization principle realization, however need divide geometries forcing (likely rainfall runoff task) dictate divide view product operations. divide realization flowpaths uniquely identified divide_id. NOTE: ids unique. instances divide draining flowpath, thus divides corresponding id property equal NA. can removed using has_flowline boolean flag property desired, part dendritic system.","code":""},{"path":"/articles/08-nextgen-views.html","id":"build-a-subset","dir":"Articles","previous_headings":"Intro","what":"Build a subset","title":"Realizations and Views","text":"help example, create cutout Poudre River Basin using hydrofabric subsetter found extract sample CONUS NextGen Hydrofabric. basin defined upstream area NWIS location Gages=06752260. USGS Next Generation Monitoring Location Page site Geoconnex PID can found ","code":"mkdir poudre cd poudre  hfsubset -l divides,nexus,flowpaths, network,flowpath_attributes,hydrolocations \\          -o ./cihro-data/poudre.gpkg \\          -r \"pre-release\" \\          -t hl \\          \"Gages-06752260\""},{"path":"/articles/08-nextgen-views.html","id":"did-we-create-it","dir":"Articles","previous_headings":"Intro > Build a subset","what":"Did we create it?","title":"Realizations and Views","text":"","code":"(f = list.files(\"cihro-data\", pattern = \"poudre.gpkg\", full.names = TRUE)) ## [1] \"cihro-data/poudre.gpkg\""},{"path":"/articles/08-nextgen-views.html","id":"whats-in-it","dir":"Articles","previous_headings":"Intro > Build a subset","what":"What’s in it?","title":"Realizations and Views","text":"","code":"st_layers(f) ## Driver: GPKG  ## Available layers: ##            layer_name     geometry_type features fields ## 1             divides     Multi Polygon      419      9 ## 2               nexus             Point      171      5 ## 3           flowpaths Multi Line String      419     10 ## 4      hydrolocations             Point       26      6 ## 5               lakes             Point        2     17 ## 6             network                NA     1884     15 ## 7 flowpath_attributes                NA      419     16 ## 8        layer_styles                NA        5     12 ##                                    crs_name ## 1                      NAD83 / Conus Albers ## 2                      NAD83 / Conus Albers ## 3                      NAD83 / Conus Albers ## 4                      NAD83 / Conus Albers ## 5 Undefined Cartesian SRS with unknown unit ## 6                                      <NA> ## 7                                      <NA> ## 8                                      <NA>"},{"path":[]},{"path":"/articles/08-nextgen-views.html","id":"defining-the-network","dir":"Articles","previous_headings":"","what":"Defining the network","title":"Realizations and Views","text":"exhaustive realization set (e.g identification concepts) given network contained network layer. layer spatial information link flowpath, divide, nexus realizations contained within area. Notably, file carries full reference fabric, manipulation, data modeling steps. see “hf_source” (reference fabric) NHDPlusV2. resulting 1884 row table stores needed information 420 divides, 590 flowpaths 342 nexus walk back source hf needed, reduced set can extracted, example:","code":"(net = read_sf(f, \"network\")) ## # A tibble: 1,884 × 15 ##    id     toid  divide_id ds_id mainstem hl_id hydroseq hl_uri hf_source   hf_id ##    <chr>  <chr> <chr>     <dbl>    <int> <chr>    <int> <chr>  <chr>       <dbl> ##  1 wb-27… nex-… cat-2786…    NA   352913 788         NA HUC12… NA             NA ##  2 wb-27… nex-… cat-2786…    NA   352913 788      11238 HUC12… NHDPlusV2 2902759 ##  3 wb-27… nex-… cat-2786…    NA   352913 788      11238 HUC12… NHDPlusV2 2900301 ##  4 wb-27… nex-… cat-2786…    NA   352913 NA          NA NA     NA             NA ##  5 wb-27… nex-… cat-2786…    NA   352913 NA       11247 NA     NHDPlusV2 2900207 ##  6 wb-27… nex-… cat-2786…    NA   352913 NA       11247 NA     NHDPlusV2 2900099 ##  7 wb-27… nex-… cat-2786…    NA   352913 NA       11247 NA     NHDPlusV2 2900757 ##  8 wb-27… nex-… cat-2786…    NA   352913 NA       11247 NA     NHDPlusV2 2900047 ##  9 wb-27… nex-… cat-2786…    NA   352913 NA       11247 NA     NHDPlusV2 2900079 ## 10 wb-27… nex-… cat-2786…    NA   352913 NA          NA NA     NA             NA ## # ℹ 1,874 more rows ## # ℹ 5 more variables: lengthkm <dbl>, areasqkm <dbl>, ## #   tot_drainage_areasqkm <dbl>, type <chr>, vpu <chr> select(net, id, toid, divide_id, hl_uri, vpu, areasqkm) %>%    distinct() ## # A tibble: 606 × 6 ##    id        toid       divide_id  hl_uri             vpu   areasqkm ##    <chr>     <chr>      <chr>      <chr>              <chr>    <dbl> ##  1 wb-278673 nex-278674 cat-278673 HUC12-101900070201 10L      13.3  ##  2 wb-278675 nex-278676 cat-278675 NA                 10L       7.44 ##  3 wb-278676 nex-278677 cat-278676 NA                 10L       8.76 ##  4 wb-278679 nex-278680 cat-278679 NA                 10L       4.52 ##  5 wb-278680 nex-278681 cat-278680 NA                 10L       8.98 ##  6 wb-278681 nex-278682 cat-278681 NA                 10L       6.63 ##  7 wb-278682 nex-278683 cat-278682 NA                 10L      11.1  ##  8 wb-278683 nex-278684 cat-278683 NA                 10L       9.96 ##  9 wb-278684 nex-278685 cat-278684 NA                 10L       8.61 ## 10 wb-278686 nex-278687 cat-278686 NA                 10L      14.7  ## # ℹ 596 more rows"},{"path":"/articles/08-nextgen-views.html","id":"forcing-task-1","dir":"Articles","previous_headings":"","what":"Forcing (Task 1)","title":"Realizations and Views","text":"generate forcing mesh (currently using EMSF) forcing workstream needs divide complex geometries associated divide_id unit. can pulled directly divides layer!","code":"read_sf(f, \"divides\") %>%    select(divide_id) %>%    filter(divide_id %in% net$divide_id) ## Simple feature collection with 419 features and 1 field ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -831675 ymin: 1975605 xmax: -759465 ymax: 2061555 ## Projected CRS: NAD83 / Conus Albers ## # A tibble: 419 × 2 ##    divide_id                                                                geom ##  * <chr>                                                      <MULTIPOLYGON [m]> ##  1 cat-280570 (((-774075 2005635, -774375 2005635, -774345 2005695, -774345 200… ##  2 cat-278676 (((-822075 1993095, -822105 1992825, -822195 1992765, -822375 199… ##  3 cat-278680 (((-818235 2004705, -818265 2004585, -818355 2004585, -818625 200… ##  4 cat-278682 (((-810375 2006985, -810285 2006865, -810015 2006865, -809925 200… ##  5 cat-278683 (((-807825 2008065, -807705 2008005, -807555 2007825, -807495 200… ##  6 cat-278686 (((-794235 2002185, -794295 2002125, -794535 2002125, -794655 200… ##  7 cat-278689 (((-787395 2000865, -787575 2000715, -787575 2000595, -787665 200… ##  8 cat-278692 (((-778785 2002215, -778755 2002395, -778695 2002485, -778695 200… ##  9 cat-278693 (((-773565 1998705, -773625 1998615, -773745 1998585, -773865 199… ## 10 cat-278695 (((-767055 1994895, -767055 1994775, -766965 1994685, -766935 199… ## # ℹ 409 more rows"},{"path":"/articles/08-nextgen-views.html","id":"rainfall-runoff-modeling-task-2","dir":"Articles","previous_headings":"","what":"Rainfall Runoff Modeling (Task 2)","title":"Realizations and Views","text":"NextGen rainfall runoff modeling tasks require ability identify unit divide complex, associated draining flowpath. , configuration files can used assign /build model formulations associated given divide_id. NextGen remains primarily lumped basin model, operating divide scale, divide view ideal viewed realization. However, since explicitly interested geometries , drop . NOTE: used SQLite directly access layer, rather reading complete layer sf, avoided reading geometry column entirely.","code":"read_sf(f, \"divides\") %>%   select(divide_id, id) %>%   st_drop_geometry() ## # A tibble: 419 × 2 ##    divide_id  id        ##  * <chr>      <chr>     ##  1 cat-280570 wb-280570 ##  2 cat-278676 wb-278676 ##  3 cat-278680 wb-278680 ##  4 cat-278682 wb-278682 ##  5 cat-278683 wb-278683 ##  6 cat-278686 wb-278686 ##  7 cat-278689 wb-278689 ##  8 cat-278692 wb-278692 ##  9 cat-278693 wb-278693 ## 10 cat-278695 wb-278695 ## # ℹ 409 more rows read_sf(f, query = \"SELECT divide_id, id FROM divides\") ## # A tibble: 419 × 2 ##    divide_id  id        ##    <chr>      <chr>     ##  1 cat-280570 wb-280570 ##  2 cat-278676 wb-278676 ##  3 cat-278680 wb-278680 ##  4 cat-278682 wb-278682 ##  5 cat-278683 wb-278683 ##  6 cat-278686 wb-278686 ##  7 cat-278689 wb-278689 ##  8 cat-278692 wb-278692 ##  9 cat-278693 wb-278693 ## 10 cat-278695 wb-278695 ## # ℹ 409 more rows"},{"path":"/articles/08-nextgen-views.html","id":"working-across-model-formulations","dir":"Articles","previous_headings":"Rainfall Runoff Modeling (Task 2)","what":"Working across model formulations","title":"Realizations and Views","text":"divides located, models assigned, often need populate configuration file pre-computed information. One example operating NOAH OWP Modular CFE models require suite divide-summarized data. data lives adjacent core hydrofabric GPKG’s can accessed using set divide_id(s). example, let’s say want CFE NOAH OWP data cat-280570, can use naming convention files, network based VPU distinction, general parquet/s3 access patterns.","code":"base = 's3://nextgen-hydrofabric/pre-release'  open_dataset(glue(\"{base}/nextgen_{unique(net$vpu)}_cfe_noahowp.parquet\")) %>%   filter(divide_id == \"cat-280570\") %>%   collect() ## # A tibble: 1 × 36 ##   divide_id  gw_Coeff gw_Zmax gw_Expon `bexp_soil_layers_stag=1` ##   <chr>         <dbl>   <dbl>    <dbl>                     <dbl> ## 1 cat-280570    0.005    10.9        7                      9.01 ## # ℹ 31 more variables: `bexp_soil_layers_stag=2` <dbl>, ## #   `bexp_soil_layers_stag=3` <dbl>, `bexp_soil_layers_stag=4` <dbl>, ## #   ISLTYP <int>, IVGTYP <int>, `dksat_soil_layers_stag=1` <dbl>, ## #   `dksat_soil_layers_stag=2` <dbl>, `dksat_soil_layers_stag=3` <dbl>, ## #   `dksat_soil_layers_stag=4` <dbl>, `psisat_soil_layers_stag=1` <dbl>, ## #   `psisat_soil_layers_stag=2` <dbl>, `psisat_soil_layers_stag=3` <dbl>, ## #   `psisat_soil_layers_stag=4` <dbl>, cwpvt <dbl>, mfsno <dbl>, mp <dbl>, …"},{"path":"/articles/08-nextgen-views.html","id":"routing-task-3","dir":"Articles","previous_headings":"","what":"Routing (Task 3)","title":"Realizations and Views","text":"Routing based flowpath nexus connection described background section requires water move flowpaths, nexuses, flowpaths. one flowpath can contribute nexus, however one nexus can contribute flowpath. hard requirement ngen network remains dendritic (e.g DAG). can ensure resultant flowpath topology, extracted divides view, compliant: Much like NOAH-OWP/CFE example, knowing connectivity flowpath network half challenge. successful route water , range attributes need supplied. Currently, provided within flowpath_attributes layer hydrofabric data model: id can used extract complete/partial flowpath view needed:","code":"library(igraph); library(visNetwork) ##  ## Attaching package: 'igraph' ## The following objects are masked from 'package:dplyr': ##  ##     as_data_frame, groups, union ## The following objects are masked from 'package:stats': ##  ##     decompose, spectrum ## The following object is masked from 'package:base': ##  ##     union g = select(net, id, toid) %>%     distinct() %>%      graph_from_data_frame(directed = TRUE)   is.dag(g) ## [1] TRUE visIgraph(g) read_sf(f, \"flowpath_attributes\") %>%   filter(id %in% unique(net$id)) ## # A tibble: 419 × 16 ##    id       rl_gages rl_NHDWaterbodyComID    Qi  MusK  MusX      n      So ChSlp ##    <chr>    <chr>    <chr>                <dbl> <dbl> <dbl>  <dbl>   <dbl> <dbl> ##  1 wb-2786… NA       NA                       0  3600   0.2 0.06   0.0197  0.517 ##  2 wb-2786… NA       NA                       0  3600   0.2 0.06   0.0214  0.438 ##  3 wb-2786… NA       NA                       0  3600   0.2 0.055  0.0167  0.402 ##  4 wb-2786… NA       NA                       0  3600   0.2 0.055  0.0193  0.365 ##  5 wb-2786… NA       NA                       0  3600   0.2 0.0563 0.0489  0.452 ##  6 wb-2786… NA       NA                       0  3600   0.2 0.055  0.0407  0.348 ##  7 wb-2786… NA       NA                       0  3600   0.2 0.055  0.0340  0.329 ##  8 wb-2786… NA       NA                       0  3600   0.2 0.055  0.0286  0.328 ##  9 wb-2786… NA       NA                       0  3600   0.2 0.0556 0.0148  0.459 ## 10 wb-2786… NA       NA                       0  3600   0.2 0.055  0.00464 0.316 ## # ℹ 409 more rows ## # ℹ 7 more variables: BtmWdth <dbl>, time <dbl>, Kchan <dbl>, nCC <dbl>, ## #   TopWdthCC <dbl>, TopWdth <dbl>, length_m <dbl> fp = read_sf(f, \"flowpaths\") %>%    filter(id == net$id[1])   div = read_sf(f, \"divides\") %>%    filter(divide_id == net$divide_id[1])  mapview(div) + fp"},{"path":"/articles/08-nextgen-views.html","id":"reporting-task-4","dir":"Articles","previous_headings":"","what":"Reporting (Task 4)","title":"Realizations and Views","text":"last task one well facilitated existing NWM find locations known Points Interest (POIs). example, lets say wanted find USGS gages present Poudre Basin. search hydrolocations view instances type Gages. total 15 gages Poudre River basin. want map , contributing flowpaths divides, simply need walk across layers:","code":"(gages = filter(net, grepl(\"Gages\", hl_uri))) ## # A tibble: 64 × 15 ##    id     toid  divide_id ds_id mainstem hl_id hydroseq hl_uri hf_source   hf_id ##    <chr>  <chr> <chr>     <dbl>    <int> <chr>    <int> <chr>  <chr>       <dbl> ##  1 wb-27… nex-… cat-2786…    NA   352913 4447        NA Gages… NA             NA ##  2 wb-27… nex-… cat-2786…    NA   352913 4447     11598 Gages… NHDPlusV2 2899479 ##  3 wb-27… nex-… cat-2786…    NA   352913 4447     11598 Gages… NHDPlusV2 2900683 ##  4 wb-27… nex-… cat-2786…    NA   352913 4447     11598 Gages… NHDPlusV2 2899495 ##  5 wb-27… nex-… cat-2786…    NA   352913 4447     11598 Gages… NHDPlusV2 2900705 ##  6 wb-27… nex-… cat-2786…    NA   352913 4447     11598 Gages… NHDPlusV2 2900709 ##  7 wb-28… nex-… cat-2805…    NA   376874 7845        NA Gages… NA             NA ##  8 wb-28… nex-… cat-2805…    NA   376874 7845     11527 Gages… NHDPlusV2 2898115 ##  9 wb-28… nex-… cat-2805…    NA   376874 7845     11527 Gages… NHDPlusV2 2898115 ## 10 wb-28… nex-… cat-2805…    NA   376874 7845     11527 Gages… NHDPlusV2 2898115 ## # ℹ 54 more rows ## # ℹ 5 more variables: lengthkm <dbl>, areasqkm <dbl>, ## #   tot_drainage_areasqkm <dbl>, type <chr>, vpu <chr> # Divides are indexed by divide_id (div = read_sf(f, \"divides\") %>%    filter(divide_id %in% gages$divide_id)) ## Simple feature collection with 13 features and 9 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: -828975 ymin: 1987995 xmax: -759465 ymax: 2027385 ## Projected CRS: NAD83 / Conus Albers ## # A tibble: 13 × 10 ##    divide_id  toid     type  ds_id areasqkm id    lengthkm tot_drainage_areasqkm ##  * <chr>      <chr>    <chr> <dbl>    <dbl> <chr>    <dbl>                 <dbl> ##  1 cat-278693 nex-278… netw…    NA     8.55 wb-2…     7.47               2734.   ##  2 cat-296532 nex-280… netw…    NA     8.40 wb-2…     5.21                 23.5  ##  3 cat-307431 nex-280… netw…    NA     4.40 wb-3…     3.89                  4.40 ##  4 cat-307433 nex-280… netw…    NA    14.0  wb-3…     1.94                 14.0  ##  5 cat-280564 nex-280… netw…    NA     5.81 wb-2…     5.30                918.   ##  6 cat-280569 nex-280… netw…    NA     2.69 wb-2…     3.20               1395.   ##  7 cat-286396 nex-286… netw…    NA     6.35 wb-2…     5.34                240.   ##  8 cat-288037 nex-288… netw…    NA     6.88 wb-2…     2.64                 18.0  ##  9 cat-296529 nex-280… netw…    NA     4.38 wb-2…     3.45                 19.9  ## 10 cat-315473 nex-280… netw…    NA     4.36 wb-3…     2.23                  4.36 ## 11 cat-331488 nex-286… netw…    NA     3.38 wb-3…     2.72                  3.38 ## 12 cat-331480 nex-278… netw…    NA     3.10 wb-3…     3.40                  3.10 ## 13 cat-278698 nex-278… netw…    NA     6.67 wb-2…     1.89               2966.   ## # ℹ 2 more variables: has_flowline <int>, geom <MULTIPOLYGON [m]> # flowpaths are indexed by id (fps = read_sf(f, \"flowpaths\") %>%    filter(id %in% gages$id)) ## Simple feature collection with 13 features and 10 fields ## Geometry type: MULTILINESTRING ## Dimension:     XY ## Bounding box:  xmin: -828149.9 ymin: 1989138 xmax: -759847.8 ymax: 2026467 ## Projected CRS: NAD83 / Conus Albers ## # A tibble: 13 × 11 ##    id      toid  mainstem order hydroseq lengthkm areasqkm tot_drainage_areasqkm ##  * <chr>   <chr>    <int> <dbl>    <int>    <dbl>    <dbl>                 <dbl> ##  1 wb-278… nex-…   352913     5    11598     7.47     8.55               2734.   ##  2 wb-280… nex-…   376874     4    11527     5.30     5.81                918.   ##  3 wb-280… nex-…   376874     4    11586     3.20     2.69               1395.   ##  4 wb-286… nex-…   461512     3    11338     5.34     6.35                240.   ##  5 wb-288… nex-…   486535     2    11215     2.64     6.88                 18.0  ##  6 wb-296… nex-…   622759     2    11404     5.21     8.40                 23.5  ##  7 wb-307… nex-…   785921     1    11405     3.89     4.40                  4.40 ##  8 wb-296… nex-…   622754     2    11409     3.45     4.38                 19.9  ##  9 wb-315… nex-…   911271     1    11410     2.23     4.36                  4.36 ## 10 wb-307… nex-…   785928     1    11585     1.94    14.0                  14.0  ## 11 wb-331… nex-…  1223251     1    11337     2.72     3.38                  3.38 ## 12 wb-331… nex-…  1223233     1    11597     3.40     3.10                  3.10 ## 13 wb-278… nex-…   352913     5    11627     1.89     6.67               2966.   ## # ℹ 3 more variables: has_divide <int>, divide_id <chr>, ## #   geom <MULTILINESTRING [m]> # Nexus locations are indexed by toid (hl = read_sf(f, \"nexus\") %>%    filter(id %in% gages$toid)) ## Simple feature collection with 6 features and 5 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -826682 ymin: 1989138 xmax: -760037.4 ymax: 2023777 ## Projected CRS: NAD83 / Conus Albers ## # A tibble: 6 × 6 ##   id         toid      hl_id hl_uri              type                 geom ## * <chr>      <chr>     <chr> <chr>               <chr>         <POINT [m]> ## 1 nex-278694 wb-278694 4447  Gages-06752000      poi   (-771344.1 1998680) ## 2 nex-278699 wb-278699 8118  Gages-06752260      poi   (-760037.4 1989138) ## 3 nex-280565 wb-280565 7845  HUC12-101900070701… poi     (-779224 2023777) ## 4 nex-280570 wb-280570 8150  Gages-06751490      poi   (-773201.3 2012891) ## 5 nex-286397 wb-286397 7908  Gages-06748600      poi   (-794801.3 1999190) ## 6 nex-288038 wb-288038 8198  Gages-06746110      poi     (-826682 1992863) mapview() + hl + div + fps"},{"path":"/articles/08-nextgen-views.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Realizations and Views","text":"many layers presented hydrofabric, views can extracted combination network layer, “viewed” layer . supplies everything needed run ngen start finish, allow introspection results! able clear implementation HY Features concepts, within detailed yet flexible data model. Taking advantage requires understanding : principle view data set flowpath network due topology requirements ngen t-route. means flowpaths nexus locations uniquely identified id, divides uniquely identified divide_id. viewing divide “view” data still provides ability access flowpath nexus realizations identifiers, auxiliary data can built relation appropriate realization (e.g. id, divide_id) providing ability larger data system scaffold.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Johnson. Author, maintainer. . Funder. . Funder. . Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson, J. M. (2022). National Hydrologic Geospatial Fabric (hydrofabric) Next Generation (NextGen) Hydrologic Modeling Framework, HydroShare, http://www.hydroshare.org/resource/129787b468aa4d55ace7b124ed27dbde","code":"@Manual{R-hydrofabric,   title = {National Hydrologic Geospatial Fabric (hydrofabric) for the Next Generation (NextGen) Hydrologic Modeling Framework [software]},   author = {J. Michael Johnson},   year = {2023},   url = {https://www.hydroshare.org/resource/129787b468aa4d55ace7b124ed27dbde}, }"},{"path":"/index.html","id":"next-generation-water-resource-modeling-framework-hydrofabrics","dir":"","previous_headings":"","what":"Next Generation Water Resource Modeling Framework Hydrofabric(s)","title":"Collection of R packages designed for hydroscience.","text":"","code":"Johnson, J. M. (2022). National Hydrologic Geospatial Fabric (hydrofabric) for the Next Generation (NextGen) Hydrologic Modeling Framework, HydroShare, http://www.hydroshare.org/resource/129787b468aa4d55ace7b124ed27dbde"},{"path":"/index.html","id":"overview","dir":"","previous_headings":"Next Generation Water Resource Modeling Framework Hydrofabric(s)","what":"Overview","title":"Collection of R packages designed for hydroscience.","text":"repository serves main purposes. Hydrofabric processes intentionally modular. package provides collection R package designed hydroscience. (e.g. tidyverse hydrofabric development) provides utilities subset area upstream location (XY), hydrofabric ID, indexed hydrolocation (e.g. NWIS gage, HUC12 NID) NHDPlus COMID full CONUS data product. provides wide range documentation including hydrofabric cross section data model, origins development product, subsetting, attribute creation can found products main landing page articles.","code":""},{"path":"/index.html","id":"cloud-native-data-archives","dir":"","previous_headings":"","what":"Cloud Native Data Archives","title":"Collection of R packages designed for hydroscience.","text":"NextGen artifacts distributed NHDPlusV2 Vector Processing Units generated set national reference datasets built collaboration NOAA, USGS, Lynker federal water modeling efforts. artifacts designed easily updated, manipulated, quality controlled meet needs wide range modeling tasks leveraging best possible input data. NextGen artifacts publicly available Lynker (www.lynker-spatial.com). VPU geopackage contains tables, spatial data, lookups relevant hydrofabric data model","code":""},{"path":[]},{"path":"/index.html","id":"r-package-installation-and-use","dir":"","previous_headings":"","what":"R Package Installation and Use","title":"Collection of R packages designed for hydroscience.","text":"library(hydrofabric) load core packages: nhdplusTools network manipulation hydrofab tool set “fabricating” multiscale hydrofabrics ngen.hydrofab NextGen extensions hydrofab climateR accessing remote data resources parameter attributes estimation zonal catchment parameter estimation Additionally load key spatial data science libraries: arrow terra sf dplyr glue","code":"# install.packages(\"remotes\") remotes::install_github(\"NOAA-OWP/hydrofabric\") library(hydrofabric) ## ── Attaching packages ────────────────────────────────────────────────────────── hydrofabric0.0.6 ──  ## ✔ dplyr         1.1.3        ✔ nhdplusTools  1.0.1    ## ✔ terra         1.7.55       ✔ hydrofab      0.5.0    ## ✔ ngen.hydrofab 0.0.3        ✔ zonal         0.0.2    ## ✔ climateR      0.3.1.4      ✔ glue          1.6.2    ## ✔ sf            1.0.14       ✔ arrow         13.0.0.1  ## ── Conflicts ──────────────────────────────────────────────────────────── hydrofabric_conflicts() ── ## ✖ arrow::buffer()    masks terra::buffer() ## ✖ terra::intersect() masks dplyr::intersect() ## ✖ glue::trim()       masks terra::trim() ## ✖ terra::union()     masks dplyr::union()"},{"path":"/index.html","id":"hydrofabric-subsetter","dir":"","previous_headings":"","what":"Collection of R packages designed for hydroscience.","title":"Collection of R packages designed for hydroscience.","text":"also created cloud based community subsetter. GO binaries can installed release page.","code":"# A hydrolocation URI hl = 'Gages-04185000'  # The output directory o = \"data/gray_test.gpkg\"  # Build subset ## caching the downloaded VPU files to \"data\" and writing all layers to \"o\" subset_network(hl_uri = hl, cache_dir = \"data\", outfile = o) ## Starting from: `nex-870116`  ## Subsetting: divides (1/5)  ## Subsetting: nexus (2/5)  ## Subsetting: flowpaths (3/5)  ## Subsetting: network (4/5)  ## Subsetting: hydrolocations (5/5)  ## Deleting layer `layer_styles' using driver `GPKG'  ## [1] \"data/gray_test.gpkg\" { plot(sf::read_sf(o, \"divides\")$geom) plot(sf::read_sf(o, \"flowpaths\")$geom, col = \"blue\", add = TRUE) plot(sf::read_sf(o, \"nexus\")$geom, col = \"red\", pch = 16, add = TRUE) }"},{"path":"/index.html","id":"hydrofabric-characteristic-data","dir":"","previous_headings":"","what":"Hydrofabric Characteristic Data","title":"Collection of R packages designed for hydroscience.","text":"wide range data can appended hydrofabric (subsets) resources including NOAA core modules, streamcat, hydroatlas, USGS catchment characteristics, . Preliminary documentation can found .","code":""},{"path":"/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Collection of R packages designed for hydroscience.","text":"NextGen artifacts model application dataset built meet aims NextGen. design, artifacts derived set general authoritative data products outlined figure 1 built close collaboration USGS. Figure 1 include set base data improves network topology geometry validity defining set community hydrolocations (POIs). 4 data products used build intermediate refactored network one hydrofabric network aggregated set community hydrolocations (minimal network), one aggregated consistent size (3-10 sqkm) enforced POI locations (target distribution). NextGen specifically derived target size aggregated product upcoming developments National Hydrologic Model (NHM) built community minimal network. two aggregations serve wide range federal modeling needs, focus open source software development workflows allow interested parties build networks starting either 4 reference datasets, refactored network!","code":""},{"path":"/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Collection of R packages designed for hydroscience.","text":"hydrofabric builds OGC HY_Features conceptual model, Hydrofabric Logical model, proposed Hydrofabric Data Model. reference, refactor, minimal, target hydrofabrics can accessed . high level introduction resources can found USGS Water Data blog.","code":""},{"path":"/index.html","id":"questions","dir":"","previous_headings":"","what":"Questions:","title":"Collection of R packages designed for hydroscience.","text":"Mike Johnson (Hydrofabric Lead)  Trey Flowers (Director, OWP Analysis Prediction Division)   Disclaimer: data preliminary provisional subject revision. provided meet need timely best science. data received final approval National Oceanic Atmospheric Administration (NOAA) U.S. Geological Survey (USGS) provided condition U.S. Government shall held liable damages resulting use data.","code":""},{"path":"/reference/cs_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Section Data Model — cs_dm","title":"Cross Section Data Model — cs_dm","text":"Cross Section Data Model","code":""},{"path":"/reference/cs_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Section Data Model — cs_dm","text":"","code":"cs_dm"},{"path":"/reference/cs_dm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cross Section Data Model — cs_dm","text":"object class list length 3.","code":""},{"path":"/reference/get_fabric.html","id":null,"dir":"Reference","previous_headings":"","what":"Access Hydrofabric Network — get_fabric","title":"Access Hydrofabric Network — get_fabric","text":"Access Hydrofabric Network","code":""},{"path":"/reference/get_fabric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access Hydrofabric Network — get_fabric","text":"","code":"get_fabric(   VPU,   base_s3 = \"s3://lynker-spatial/pre-release/\",   cache_dir = NULL,   cache_overwrite = FALSE )"},{"path":"/reference/get_fabric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access Hydrofabric Network — get_fabric","text":"VPU Vector Processing Unit base_s3 base hydrofabric directory access Lynker's s3 cache_dir data cached local directory? speed multiple subsets region cache_overwrite description. cached file overwritten","code":""},{"path":"/reference/get_fabric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access Hydrofabric Network — get_fabric","text":"file path","code":""},{"path":"/reference/hf_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Hydrofabric Data Model — hf_dm","title":"Hydrofabric Data Model — hf_dm","text":"Hydrofabric Data Model","code":""},{"path":"/reference/hf_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hydrofabric Data Model — hf_dm","text":"","code":"hf_dm"},{"path":"/reference/hf_dm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hydrofabric Data Model — hf_dm","text":"object class list length 8.","code":""},{"path":"/reference/hydrofabric_conflicts.html","id":null,"dir":"Reference","previous_headings":"","what":"Conflicts between the hydrofabric and other packages — hydrofabric_conflicts","title":"Conflicts between the hydrofabric and other packages — hydrofabric_conflicts","text":"function lists conflicts packages hydrofabric packages loaded.","code":""},{"path":"/reference/hydrofabric_conflicts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conflicts between the hydrofabric and other packages — hydrofabric_conflicts","text":"","code":"hydrofabric_conflicts()"},{"path":"/reference/hydrofabric_conflicts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conflicts between the hydrofabric and other packages — hydrofabric_conflicts","text":"four conflicts deliberately ignored: intersect, union, setequal, setdiff dplyr. functions make base equivalents generic, negatively affect existing code.","code":""},{"path":"/reference/hydrofabric_conflicts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conflicts between the hydrofabric and other packages — hydrofabric_conflicts","text":"","code":"hydrofabric_conflicts() #> ── Conflicts ──────────────────────────────────────── hydrofabric_conflicts() ── #> ✖ arrow::buffer()    masks terra::buffer() #> ✖ terra::intersect() masks dplyr::intersect() #> ✖ glue::trim()       masks terra::trim() #> ✖ terra::union()     masks dplyr::union()"},{"path":"/reference/hydrofabric_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"List all packages in the hydrofabric — hydrofabric_packages","title":"List all packages in the hydrofabric — hydrofabric_packages","text":"List packages hydrofabric","code":""},{"path":"/reference/hydrofabric_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all packages in the hydrofabric — hydrofabric_packages","text":"","code":"hydrofabric_packages(include_self = TRUE)"},{"path":"/reference/hydrofabric_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all packages in the hydrofabric — hydrofabric_packages","text":"include_self Include hydrofabric list?","code":""},{"path":"/reference/hydrofabric_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all packages in the hydrofabric — hydrofabric_packages","text":"","code":"hydrofabric_packages() #>  [1] \"arrow\"         \"aws.s3\"        \"dplyr\"         \"DBI\"           #>  [5] \"RSQLite\"       \"sf\"            \"terra\"         \"glue\"          #>  [9] \"nhdplusTools\"  \"hydrofab\"      \"ngen.hydrofab\" \"zonal\"         #> [13] \"climateR\"      \"hydrofabric\""},{"path":"/reference/subset_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Hydrofabric Network — subset_network","title":"Subset Hydrofabric Network — subset_network","text":"Subset Hydrofabric Network","code":""},{"path":"/reference/subset_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Hydrofabric Network — subset_network","text":"","code":"subset_network(   id = NULL,   comid = NULL,   hl_uri = NULL,   nldi_feature = NULL,   xy = NULL,   base_s3 = \"s3://lynker-spatial/pre-release/\",   base_dir = NULL,   lyrs = c(\"divides\", \"nexus\", \"flowpaths\", \"network\", \"hydrolocations\",     \"reference_flowline\", \"reference_catchment\", \"refactored_flowpaths\",     \"refactored_divides\"),   outfile = NULL,   cache_dir = NULL,   qml_dir = system.file(\"qml\", package = \"hydrofabric\"),   cache_overwrite = FALSE )"},{"path":"/reference/subset_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Hydrofabric Network — subset_network","text":"id hydrofabric id (relevant nextgen fabrics) comid NHDPlusV2 COMID hl_uri hydrolocation URI (relevant nextgen fabrics) nldi_feature list names 'featureSource' 'featureID' 'featureSource' derived \"source\" column response dataRetrieval::get_nldi_sources() 'featureID' known identifier specified 'featureSource'. xy Location given vector XY CRS 4326 (long, lat) base_s3 base hydrofabric directory access Lynker's s3 base_dir base hydrofabric directory lyrs layers extract. Default possible hydrofabric GPKG data model outfile file path write . Must \".gpkg\" extension cache_dir data cached local directory? speed multiple subsets region cache_overwrite description. cached file overwritten","code":""},{"path":"/reference/subset_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Hydrofabric Network — subset_network","text":"file path (outfile) list features","code":""},{"path":"/reference/subset_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Hydrofabric Network — subset_reference","title":"Subset Hydrofabric Network — subset_reference","text":"Subset Hydrofabric Network","code":""},{"path":"/reference/subset_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Hydrofabric Network — subset_reference","text":"","code":"subset_reference(   nldi_feature,   gpkg = NULL,   pattern = \"/Volumes/Transcend/ngen/CONUS-hydrofabric/01_reference/reference_{vpu}.gpkg\",   export_gpkg = NULL )"},{"path":"/reference/subset_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Hydrofabric Network — subset_reference","text":"pattern Pattern distributed VPU based GPKGS export_gpkg file path write id hydrofabric id comid NHDPlusV2 COMID hl_id Hydrolocation URI network Network Parquet file lyrs layers extract","code":""},{"path":"/reference/subset_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Hydrofabric Network — subset_reference","text":"file path list","code":""}]
